{
  "hash": "7c8c27a8cc7e070f8f6706df7bf9a1f9",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Low Flow Variation\"\n---\n\n\n\n\n\n\n\n\n**Purpose:** Evaluate spatiotemporal variation in drought-related low flow conditions across headwater stream networks. \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Data\n\nSite information\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsiteinfo <- read_csv(\"C:/Users/jbaldock/OneDrive - DOI/Documents/USGS/EcoDrought/EcoDrought Working/Data/EcoDrought_SiteInformation.csv\")\nsiteinfo_sp <- st_as_sf(siteinfo, coords = c(\"long\", \"lat\"), crs = 4326)\n```\n:::\n\n\n\n\n\n\n\n\nLittle g's\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat_clean <- read_csv(\"C:/Users/jbaldock/OneDrive - DOI/Documents/USGS/EcoDrought/EcoDrought Working/EcoDrought-Analysis/Qualitative/LittleG_data_clean.csv\")\n```\n:::\n\n\n\n\n\n\n\n\nBig G's\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat_clean_big <- read_csv(\"C:/Users/jbaldock/OneDrive - DOI/Documents/USGS/EcoDrought/EcoDrought Working/EcoDrought-Analysis/Qualitative/BigG_data_clean.csv\")\n```\n:::\n\n\n\n\n\n\n\n\nClimate\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nclimdf <- read_csv(\"C:/Users/jbaldock/OneDrive - DOI/Documents/USGS/EcoDrought/EcoDrought Working/EcoDrought-Analysis/Qualitative/Daymet_climate.csv\")\nclimdf_summ <- read_csv(\"C:/Users/jbaldock/OneDrive - DOI/Documents/USGS/EcoDrought/EcoDrought Working/EcoDrought-Analysis/Qualitative/Daymet_climate_summary.csv\")\n```\n:::\n\n\n\n\n\n\n\n\nWater availability\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# wateravail <- read_csv(\"C:/Users/jbaldock/OneDrive - DOI/Documents/USGS/EcoDrought/EcoDrought Working/EcoDrought-Analysis/Qualitative/BigG_wateravailability_annual.csv\")\nwateravail <- read_csv(\"C:/Users/jbaldock/OneDrive - DOI/Documents/USGS/EcoDrought/EcoDrought Working/EcoDrought-Analysis/Qualitative/BigG_wateravailability_annual.csv\") %>%\n  filter(!is.na(totalyield), !is.na(totalyield_sum)) %>%\n  group_by(site_name) %>%\n  mutate(tyz_perc = percentile(totalyield_z),\n         tyz_sum_perc = percentile(totalyield_sum_z)) %>%\n  mutate(tyz_perc = ifelse(is.na(tyz_perc), 0, tyz_perc),\n         tyz_sum_perc = ifelse(is.na(tyz_sum_perc), 0, tyz_sum_perc)) %>%\n  ungroup()\n\nwateravail2 <- wateravail %>% \n  mutate(basin = ifelse(basin == \"Shields River\", \"Yellowstone River\",\n                        ifelse(basin == \"Flathead\", \"Flathead River\",  \n                               ifelse(basin == \"Donner Blitzen\", \"Donner-Blitzen River\", basin)))) %>%\n  mutate(basin = factor(basin, levels = c(\"West Brook\", \"Piney River\", \"Staunton River\", \"Paine Run\", \"Flathead River\", \"Yellowstone River\", \"Snake River\", \"Donner-Blitzen River\")))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# get range of years for little g data\ndaterange <- dat_clean %>% group_by(basin) %>% summarize(minyear = year(min(date)), maxyear = year(max(date)))\n\n# spread ecod years\nmylist <- vector(\"list\", length = dim(daterange)[1])\nfor (i in 1:dim(daterange)[1]) {\n  mylist[[i]] <- tibble(basin = daterange$basin[i], WaterYear = seq(from = daterange$minyear[i], to = daterange$maxyear[i], by = 1))\n}\nyrdf <- do.call(rbind, mylist) %>% mutate(ecodyr = \"yes\")\n```\n:::\n\n\n\n\n\n\n\n\n\n## Order sites\n\nFor colors, order sites from downstream to upstream (roughly) and by subbasin (if appropriate)\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwborder <- c(\"West Brook NWIS\", \"West Brook Lower\", \"Mitchell Brook\", \"Jimmy Brook\", \"Obear Brook Lower\", \"West Brook Upper\", \"West Brook Reservoir\", \"Sanderson Brook\", \"Avery Brook\", \"West Whately Brook\")\npaineorder <- c(\"Paine Run 10\", \"Paine Run 08\", \"Paine Run 07\", \"Paine Run 06\", \"Paine Run 02\", \"Paine Run 01\")\nstauntorder <- c(\"Staunton River 10\", \"Staunton River 09\", \"Staunton River 07\", \"Staunton River 06\", \"Staunton River 03\", \"Staunton River 02\")\nflatorder <- c(\"BigCreekLower\", \"LangfordCreekLower\", \"LangfordCreekUpper\", \"Big Creek NWIS\", \"BigCreekUpper\", \"HallowattCreekLower\", \"NicolaCreek\", \"WernerCreek\", \"Hallowat Creek NWIS\", \"CoalCreekLower\", \"CycloneCreekLower\", \"CycloneCreekMiddle\", \"CycloneCreekUpper\", \"CoalCreekMiddle\", \"CoalCreekNorth\", \"CoalCreekHeadwaters\", \"McGeeCreekLower\", \"McGeeCreekTrib\", \"McGeeCreekUpper\")\nyellorder <- c(\"Shields River Valley Ranch\", \"Deep Creek\", \"Crandall Creek\", \"Buck Creek\", \"Dugout Creek\", \"Shields River ab Dugout\", \"Lodgepole Creek\", \"EF Duck Creek be HF\", \"EF Duck Creek ab HF\", \"Henrys Fork\")\nsnakeorder <- c(\"Spread Creek Dam\", \"Rock Creek\", \"NF Spread Creek Lower\", \"NF Spread Creek Upper\", \"Grizzly Creek\", \"SF Spread Creek Lower\", \"Grouse Creek\", \"SF Spread Creek Upper\", \"Leidy Creek Mouth\")\ndonnerorder <- c(\"Fish Creek NWIS\", \"Donner Blitzen ab Fish NWIS\", \"Donner Blitzen nr Burnt Car NWIS\", \"Donner Blitzen ab Indian NWIS\")\n```\n:::\n\n\n\n\n\n\n\n\n\n## Low flow hydrology\n\nSet drought levels\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmydroughtlevels <- c(\"none\", \"q50\", \"q45\", \"q40\", \"q35\", \"q30\", \"q25\", \"q20\", \"q15\", \"q10\", \"q05\", \"q02\")\n```\n:::\n\n\n\n\n\n\n\n\n\n### Delineate low flows\n\nDrought/low flow delineation is somewhat complicated by the fact that some streams simply have greater yield than others. For example, using low flow thresholds derived from the reference gage and applied to headwater gages will never detect low flow conditions at groundwater-dominated sites, but this doesn't mean that flow at that site isn't lower than normal (for that site). This is most obvious in the Snake River basin, where NF Spread Creek Upper never experiences drought (because this is presumably a gaining reach) and Rock and Grouse Creeks are in a perpetual state of drought (presumable these are losing reaches). This is a classic \"At which level of organization do I standardize my data?\" question: are general differences in flow volume among sites signal or noise? But perhaps more importantly, this is a question of \"what is drought?\" Is drought relative to some larger regional metric (e.g., big G)? Or is it a local phenomenon, where the specifics of individual streams and reaches matter. \n\nFor each site individually, generate (fixed) drought/low flow thresholds using the same quantiles same as above: ~0.05 increments from 0.02 to 0.50. Restrict data to selected basins, sites, and years with (nearly) complete summer (July, August, September) data over the selected periods/locations. (Standardization needs to be done over comparable time periods, at least among sites within basins). \n\nRequire 95% data availability across all water years for site to be included!\n\nOrganize data, get site-level low flow threshold values, and denote drought periods\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Require 95% data availability!\nmonthss <- c(7:9)\n\n# grab data and bind, z-score Yield\ndat_clean_sub <- bind_rows(\n  dat_clean %>% filter(basin == \"West Brook\", WaterYear %in% c(2020:2023), Month %in% monthss, !site_name %in% c(\"Mitchell Brook\", \"West Brook Lower\")) %>%\n    bind_rows(dat_clean_big %>% filter(basin == \"West Brook\", WaterYear %in% c(2020:2023), Month %in% monthss)),\n  \n  dat_clean %>% filter(basin == \"Staunton River\", WaterYear %in% c(2019:2022), Month %in% monthss) %>%\n    bind_rows(dat_clean_big %>% filter(basin == \"Staunton River\", WaterYear %in% c(2019:2022), Month %in% monthss)),\n  \n  dat_clean %>% filter(basin == \"Flathead\", WaterYear %in% c(2019:2021), Month %in% monthss, !site_name %in% c(\"BigCreekLower\", \"LangfordCreekUpper\", \"WernerCreek\", \"CycloneCreekMiddle\", \"CoalCreekMiddle\", \"McGeeCreekUpper\")) %>%\n    bind_rows(dat_clean_big %>% filter(basin == \"Flathead\", WaterYear %in% c(2019:2021), Month %in% monthss)),\n  \n  # dat_clean %>% filter(subbasin == \"Big Creek\", WaterYear %in% c(2019:2021), Month %in% monthss, !site_name %in% c(\"BigCreekLower\", \"LangfordCreekUpper\", \"NicolaCreek\", \"WernerCreek\")) %>%\n  #   bind_rows(dat_clean_big %>% filter(basin == \"Flathead\", WaterYear %in% c(2019:2021), Month %in% monthss) %>% mutate(subbasin = \"Big Creek\")),\n  # \n  # dat_clean %>% filter(subbasin == \"Coal Creek\", WaterYear %in% c(2019:2021), Month %in% monthss, !site_name %in% c(\"CycloneCreekMiddle\", \"CoalCreekMiddle\", \"CoalCreekHeadwaters\")) %>%\n  #   bind_rows(dat_clean_big %>% filter(basin == \"Flathead\", WaterYear %in% c(2019:2021), Month %in% monthss) %>% mutate(subbasin = \"Coal Creek\")),\n  \n  dat_clean %>% filter(basin == \"Snake River\", WaterYear %in% c(2020:2022), Month %in% monthss, !site_name %in% c(\"Spread Creek Dam\")) %>%\n    bind_rows(dat_clean_big %>% filter(basin == \"Snake River\", WaterYear %in% c(2020:2022), Month %in% monthss)),\n  \n  dat_clean %>% filter(basin == \"Shields River\", WaterYear %in% c(2017, 2019, 2020, 2022), Month %in% monthss, !site_name %in% c(\"Shields River Valley Ranch\", \"Buck Creek\", \"Lodgepole Creek\")) %>% group_by(site_name) %>%\n    bind_rows(dat_clean_big %>% filter(basin == \"Shields River\", WaterYear %in% c(2017, 2019, 2020, 2022), Month %in% monthss)),\n  \n  # dat_clean %>% filter(subbasin == \"Shields River\", WaterYear %in% c(2019, 2020, 2023), Month %in% monthss, !site_name %in% c(\"Shields River Valley Ranch\")) %>% group_by(site_name) %>%\n  #   bind_rows(dat_clean_big %>% filter(basin == \"Shields River\", WaterYear %in% c(2019, 2020, 2023), Month %in% monthss)),\n  # \n  # dat_clean %>% filter(subbasin == \"Duck Creek\", WaterYear %in% c(2017:2022), Month %in% monthss) %>%\n  #   bind_rows(dat_clean_big %>% filter(basin == \"Shields River\", WaterYear %in% c(2017:2022), Month %in% monthss) %>% mutate(subbasin = \"Duck Creek\")),\n  \n  dat_clean %>% filter(basin == \"Donner Blitzen\", WaterYear %in% c(2019:2022), Month %in% monthss) %>%\n    bind_rows(dat_clean_big %>% filter(basin == \"Donner Blitzen\", WaterYear %in% c(2019:2022), Month %in% monthss))\n) %>%\n  group_by(site_name) %>%\n  mutate(z_Yield_mm = scale(Yield_mm, center = TRUE, scale = TRUE)[,1]) %>%\n  ungroup()\n\n# get low flow thresholds\ndat_clean_sub_thresh <- dat_clean_sub %>% \n  group_by(site_name) %>%\n  summarize(thresh_50_fix = quantile(z_Yield_mm, probs = 0.50, na.rm = TRUE),\n            thresh_45_fix = quantile(z_Yield_mm, probs = 0.45, na.rm = TRUE),\n            thresh_40_fix = quantile(z_Yield_mm, probs = 0.40, na.rm = TRUE),\n            thresh_35_fix = quantile(z_Yield_mm, probs = 0.35, na.rm = TRUE),\n            thresh_30_fix = quantile(z_Yield_mm, probs = 0.30, na.rm = TRUE),\n            thresh_25_fix = quantile(z_Yield_mm, probs = 0.25, na.rm = TRUE),\n            thresh_20_fix = quantile(z_Yield_mm, probs = 0.20, na.rm = TRUE),\n            thresh_15_fix = quantile(z_Yield_mm, probs = 0.15, na.rm = TRUE),\n            thresh_10_fix = quantile(z_Yield_mm, probs = 0.10, na.rm = TRUE),\n            thresh_05_fix = quantile(z_Yield_mm, probs = 0.05, na.rm = TRUE),\n            thresh_02_fix = quantile(z_Yield_mm, probs = 0.02, na.rm = TRUE)) %>%\n  ungroup()\ndat_clean_sub_thresh\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 52 × 12\n   site_name           thresh_50_fix thresh_45_fix thresh_40_fix thresh_35_fix\n   <chr>                       <dbl>         <dbl>         <dbl>         <dbl>\n 1 Avery Brook                -0.263        -0.308        -0.336        -0.348\n 2 Big Creek NWIS             -0.380        -0.421        -0.474        -0.532\n 3 BigCreekUpper              -0.435        -0.488        -0.532        -0.576\n 4 CoalCreekHeadwaters        -0.345        -0.359        -0.368        -0.379\n 5 CoalCreekLower             -0.378        -0.443        -0.507        -0.553\n 6 CoalCreekNorth             -0.349        -0.429        -0.488        -0.548\n 7 Crandall Creek             -0.347        -0.465        -0.526        -0.588\n 8 CycloneCreekLower          -0.225        -0.313        -0.405        -0.457\n 9 CycloneCreekUpper          -0.504        -0.555        -0.596        -0.617\n10 Deep Creek                 -0.340        -0.396        -0.441        -0.488\n# ℹ 42 more rows\n# ℹ 7 more variables: thresh_30_fix <dbl>, thresh_25_fix <dbl>,\n#   thresh_20_fix <dbl>, thresh_15_fix <dbl>, thresh_10_fix <dbl>,\n#   thresh_05_fix <dbl>, thresh_02_fix <dbl>\n```\n\n\n:::\n\n```{.r .cell-code}\n# join thresholds to data and denote drought periods\ndat_clean_sub <- dat_clean_sub %>% \n  left_join(dat_clean_sub_thresh) %>%\n  mutate(month = month(date),\n         year = year(date),\n         drought_fix = ifelse(z_Yield_mm <= thresh_50_fix & z_Yield_mm > thresh_45_fix, \"q50\",\n                              ifelse(z_Yield_mm <= thresh_45_fix & z_Yield_mm > thresh_40_fix, \"q45\",\n                                     ifelse(z_Yield_mm <= thresh_40_fix & z_Yield_mm > thresh_35_fix, \"q40\",\n                                            ifelse(z_Yield_mm <= thresh_35_fix & z_Yield_mm > thresh_30_fix, \"q35\",\n                                                   ifelse(z_Yield_mm <= thresh_30_fix & z_Yield_mm > thresh_25_fix, \"q30\",\n                                                          ifelse(z_Yield_mm <= thresh_25_fix & z_Yield_mm > thresh_20_fix, \"q25\",\n                                                                 ifelse(z_Yield_mm <= thresh_20_fix & z_Yield_mm > thresh_15_fix, \"q20\",\n                                                                        ifelse(z_Yield_mm <= thresh_15_fix & z_Yield_mm > thresh_10_fix, \"q15\",\n                                                                               ifelse(z_Yield_mm <= thresh_10_fix & z_Yield_mm > thresh_05_fix, \"q10\",\n                                                                                      ifelse(z_Yield_mm <= thresh_05_fix & z_Yield_mm > thresh_02_fix, \"q05\",  \n                                                                                             ifelse(z_Yield_mm <= thresh_02_fix, \"q02\", \"none\")))))))))))) %>%\n  mutate(drought_fix = factor(ifelse(is.na(Yield_mm), NA, drought_fix), levels = mydroughtlevels)) \ndat_clean_sub\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 16,731 × 31\n   site_name   basin    subbasin region date       flow_mean tempc_mean Yield_mm\n   <chr>       <chr>    <chr>    <chr>  <date>         <dbl>      <dbl>    <dbl>\n 1 Avery Brook West Br… West Br… Mass   2020-07-01     1.34        16.0    0.446\n 2 Avery Brook West Br… West Br… Mass   2020-07-02     0.963       16.1    0.321\n 3 Avery Brook West Br… West Br… Mass   2020-07-03     2.40        17.3    0.800\n 4 Avery Brook West Br… West Br… Mass   2020-07-04     3.31        17.4    1.10 \n 5 Avery Brook West Br… West Br… Mass   2020-07-05     1.38        17.5    0.460\n 6 Avery Brook West Br… West Br… Mass   2020-07-06     0.965       17.5    0.322\n 7 Avery Brook West Br… West Br… Mass   2020-07-07     0.778       17.3    0.259\n 8 Avery Brook West Br… West Br… Mass   2020-07-08     0.795       17.3    0.265\n 9 Avery Brook West Br… West Br… Mass   2020-07-09     1.07        17.9    0.356\n10 Avery Brook West Br… West Br… Mass   2020-07-10    14.3         19.4    4.76 \n# ℹ 16,721 more rows\n# ℹ 23 more variables: CalendarYear <dbl>, Month <dbl>, MonthName <chr>,\n#   WaterYear <dbl>, DayofYear <dbl>, logYield <dbl>, designation <chr>,\n#   doy_calendar <dbl>, z_Yield_mm <dbl>, thresh_50_fix <dbl>,\n#   thresh_45_fix <dbl>, thresh_40_fix <dbl>, thresh_35_fix <dbl>,\n#   thresh_30_fix <dbl>, thresh_25_fix <dbl>, thresh_20_fix <dbl>,\n#   thresh_15_fix <dbl>, thresh_10_fix <dbl>, thresh_05_fix <dbl>, …\n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n\n\n### Plot heatmaps\n\nCreate heatmap plotting function\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# site-level drought threshold\nheatmapfun_site <- function(bas, months, bigG, orderr) {\n  dd <- dat_clean_sub %>% filter(basin == bas)\n  mysites <- c(unique(unlist(dd %>% filter(site_name != bigG) %>% select(site_name))), bigG)\n  myrect <- dd %>% group_by(WaterYear) %>% summarize(mindate = min(date), maxdate = max(date)) %>% ungroup()\n  p <- dd %>%\n    ggplot() +\n    geom_tile(aes(x = date, y = factor(site_name, levels = c(rev(orderr), bigG)), fill = drought_fix)) +\n    scale_fill_viridis(option = \"A\", direction = -1, discrete = TRUE, limits = mydroughtlevels) +\n    geom_rect(data = myrect, aes(xmin = mindate, xmax = maxdate, ymin = length(mysites)-0.5, ymax = length(mysites)+0.5), \n              color = \"grey70\", fill = NA, size = 1.25) +\n    xlab(\"Date\") + ylab(\"Site\") +\n    #facet_wrap(~WaterYear, scales = \"free_x\") + \n    facet_wrap2(~WaterYear, scales = \"free_x\", nrow = 2, ncol = 3, trim_blank = FALSE) +\n    theme_bw() + theme(axis.title = element_blank())\nreturn(p)\n}\n```\n:::\n\n\n\n\n\n\n\n\n::: panel-tabset\n#### West Brook\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nheatmapfun_site(bas = \"West Brook\", bigG = \"South River Conway NWIS\", months = c(7:9), orderr = wborder)\n```\n\n::: {.cell-output-display}\n![](ReferenceLowFlow_files/figure-html/unnamed-chunk-12-1.png){width=864}\n:::\n:::\n\n\n\n\n\n\n\n#### Staunton River\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nheatmapfun_site(bas = \"Staunton River\", bigG = \"Rapidan River NWIS\", months = c(7:9), orderr = stauntorder)\n```\n\n::: {.cell-output-display}\n![](ReferenceLowFlow_files/figure-html/unnamed-chunk-13-1.png){width=864}\n:::\n:::\n\n\n\n\n\n\n\n#### Flathead\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nheatmapfun_site(bas = \"Flathead\", bigG = \"North Fork Flathead River NWIS\", months = c(7:9), orderr = flatorder)\n```\n\n::: {.cell-output-display}\n![](ReferenceLowFlow_files/figure-html/unnamed-chunk-14-1.png){width=864}\n:::\n:::\n\n\n\n\n\n\n\n#### Snake River\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nheatmapfun_site(bas = \"Snake River\", bigG = \"Pacific Creek at Moran NWIS\", months = c(7:9), order = snakeorder)\n```\n\n::: {.cell-output-display}\n![](ReferenceLowFlow_files/figure-html/unnamed-chunk-15-1.png){width=864}\n:::\n:::\n\n\n\n\n\n\n\n#### Yellowstone River\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nheatmapfun_site(bas = \"Shields River\", bigG = \"Yellowstone River Livingston NWIS\", months = c(7:9), orderr = yellorder)\n```\n\n::: {.cell-output-display}\n![](ReferenceLowFlow_files/figure-html/unnamed-chunk-16-1.png){width=864}\n:::\n:::\n\n\n\n\n\n\n\n#### Donner Blitzen\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nheatmapfun_site(bas = \"Donner Blitzen\", bigG = \"Donner Blitzen River nr Frenchglen NWIS\", months = c(7:9), orderr = donnerorder)\n```\n\n::: {.cell-output-display}\n![](ReferenceLowFlow_files/figure-html/unnamed-chunk-17-1.png){width=864}\n:::\n:::\n\n\n\n\n\n\n\n:::\n\n\n## Deficit and duration\n\nCalculate low flow deficit and duration from site-specific low flow delineation.\n\nOrganize data\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat_clean_sub_deficit <- dat_clean_sub %>%\n  mutate(deficit_50_fix = ifelse(z_Yield_mm < thresh_50_fix, abs(thresh_50_fix - z_Yield_mm), 0),\n         deficit_45_fix = ifelse(z_Yield_mm < thresh_45_fix, abs(thresh_45_fix - z_Yield_mm), 0),\n         deficit_40_fix = ifelse(z_Yield_mm < thresh_40_fix, abs(thresh_40_fix - z_Yield_mm), 0),\n         deficit_35_fix = ifelse(z_Yield_mm < thresh_35_fix, abs(thresh_35_fix - z_Yield_mm), 0),\n         deficit_30_fix = ifelse(z_Yield_mm < thresh_30_fix, abs(thresh_30_fix - z_Yield_mm), 0),\n         deficit_25_fix = ifelse(z_Yield_mm < thresh_25_fix, abs(thresh_25_fix - z_Yield_mm), 0),\n         deficit_20_fix = ifelse(z_Yield_mm < thresh_20_fix, abs(thresh_20_fix - z_Yield_mm), 0),\n         deficit_15_fix = ifelse(z_Yield_mm < thresh_15_fix, abs(thresh_15_fix - z_Yield_mm), 0),\n         deficit_10_fix = ifelse(z_Yield_mm < thresh_10_fix, abs(thresh_10_fix - z_Yield_mm), 0),\n         deficit_05_fix = ifelse(z_Yield_mm < thresh_05_fix, abs(thresh_05_fix - z_Yield_mm), 0),\n         deficit_02_fix = ifelse(z_Yield_mm < thresh_02_fix, abs(thresh_02_fix - z_Yield_mm), 0))\n\n# summarize by summer\ndefdur_ssn_sub <- dat_clean_sub_deficit %>% \n  filter(!is.na(Yield_mm), Month %in% c(7:9)) %>% \n  group_by(site_name, basin, subbasin, region, designation, CalendarYear, WaterYear) %>% \n  summarize(ndays = n(),\n            propdays = ndays/(31+31+30), \n            \n            duration_50_fix = sum(deficit_50_fix > 0),\n            duration_45_fix = sum(deficit_45_fix > 0),\n            duration_40_fix = sum(deficit_40_fix > 0),\n            duration_35_fix = sum(deficit_35_fix > 0),\n            duration_30_fix = sum(deficit_30_fix > 0),\n            duration_25_fix = sum(deficit_25_fix > 0),\n            duration_20_fix = sum(deficit_20_fix > 0),\n            duration_15_fix = sum(deficit_15_fix > 0),\n            duration_10_fix = sum(deficit_10_fix > 0),\n            duration_05_fix = sum(deficit_05_fix > 0),\n            duration_02_fix = sum(deficit_02_fix > 0),\n            \n            duration_50_fix_prop = sum(deficit_50_fix > 0) / ndays,\n            duration_45_fix_prop = sum(deficit_45_fix > 0) / ndays,\n            duration_40_fix_prop = sum(deficit_40_fix > 0) / ndays,\n            duration_35_fix_prop = sum(deficit_35_fix > 0) / ndays,\n            duration_30_fix_prop = sum(deficit_30_fix > 0) / ndays,\n            duration_25_fix_prop = sum(deficit_25_fix > 0) / ndays,\n            duration_20_fix_prop = sum(deficit_20_fix > 0) / ndays,\n            duration_15_fix_prop = sum(deficit_15_fix > 0) / ndays,\n            duration_10_fix_prop = sum(deficit_10_fix > 0) / ndays,\n            duration_05_fix_prop = sum(deficit_05_fix > 0) / ndays,\n            duration_02_fix_prop = sum(deficit_02_fix > 0) / ndays,\n            \n            deficit_50_fix = sum(deficit_50_fix),\n            deficit_45_fix = sum(deficit_45_fix),\n            deficit_40_fix = sum(deficit_40_fix),\n            deficit_35_fix = sum(deficit_35_fix),\n            deficit_30_fix = sum(deficit_30_fix),\n            deficit_25_fix = sum(deficit_25_fix),\n            deficit_20_fix = sum(deficit_20_fix),\n            deficit_15_fix = sum(deficit_15_fix),\n            deficit_10_fix = sum(deficit_10_fix),\n            deficit_05_fix = sum(deficit_05_fix),\n            deficit_02_fix = sum(deficit_02_fix)) %>%\n  ungroup() %>%\n  mutate(designation = ifelse(is.na(designation), \"big\", designation)) %>%\n  filter(propdays >= 0.70) %>%\n  left_join(wateravail %>% select(basin, WaterYear, totalyield, totalyield_z))\n\n# keep raw days for binomial model\ndefdur_ssn_sub2 <- dat_clean_sub_deficit %>% \n  filter(!is.na(Yield_mm), Month %in% c(7:9)) %>% \n  group_by(site_name, basin, subbasin, region, designation, CalendarYear, WaterYear) %>% \n  summarize(ndays = n(),\n            propdays = ndays/(31+31+30), \n            duration_50_fix = sum(deficit_50_fix > 0),\n            duration_45_fix = sum(deficit_45_fix > 0),\n            duration_40_fix = sum(deficit_40_fix > 0),\n            duration_35_fix = sum(deficit_35_fix > 0),\n            duration_30_fix = sum(deficit_30_fix > 0),\n            duration_25_fix = sum(deficit_25_fix > 0),\n            duration_20_fix = sum(deficit_20_fix > 0),\n            duration_15_fix = sum(deficit_15_fix > 0),\n            duration_10_fix = sum(deficit_10_fix > 0),\n            duration_05_fix = sum(deficit_05_fix > 0),\n            duration_02_fix = sum(deficit_02_fix > 0),\n            \n            deficit_50_fix = sum(deficit_50_fix),\n            deficit_45_fix = sum(deficit_45_fix),\n            deficit_40_fix = sum(deficit_40_fix),\n            deficit_35_fix = sum(deficit_35_fix),\n            deficit_30_fix = sum(deficit_30_fix),\n            deficit_25_fix = sum(deficit_25_fix),\n            deficit_20_fix = sum(deficit_20_fix),\n            deficit_15_fix = sum(deficit_15_fix),\n            deficit_10_fix = sum(deficit_10_fix),\n            deficit_05_fix = sum(deficit_05_fix),\n            deficit_02_fix = sum(deficit_02_fix)) %>%\n  ungroup() %>%\n  mutate(designation = ifelse(is.na(designation), \"big\", designation)) %>%\n  filter(propdays >= 0.70) %>%\n  left_join(wateravail %>% select(basin, WaterYear, totalyield, totalyield_z))\n```\n:::\n\n\n\n\n\n\n\n\nCreate plotting functions. These are the same as defined above, but instead grab the \"defdur_ssn_sub\" object for site-level low flow thresholds.\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndurationplotfun_sub <- function(bas, bigG, months, wateryears, dropsites = NA) {\n  # filter and summarize data\n  dd <- defdur_ssn_sub %>% \n    filter(basin == bas | site_name == bigG, WaterYear %in% wateryears, !site_name %in% dropsites) %>%\n    mutate(WaterYear = factor(WaterYear, levels = wateryears))\n\n  # order sites, Big G first\n  mysites <- c(unique(unlist(dd %>% filter(designation == \"big\") %>% select(site_name))),\n               unique(unlist(dd %>% filter(designation == \"little\") %>% select(site_name))))\n\n  # among site StDev ~ percentile\n  p_sds <- dd %>% \n    gather(duration_50_fix_prop:duration_02_fix_prop, key = \"metric\", value = \"duration\") %>%\n    mutate(quant = as.numeric(gsub(\".*?([0-9]+).*\", \"\\\\1\", metric)) ) %>% \n    filter(designation == \"little\") %>%\n    group_by(WaterYear, totalyield_z, metric, quant) %>%\n    summarize(sddur = sd(duration, na.rm = TRUE)) %>%\n    ungroup() %>%\n    #left_join(dd %>% filter(site_name == bigG) %>% select(WaterYear, duration_25_fix_prop) %>% rename(dur25 = duration_25_fix_prop)) %>%\n    left_join(wateravail %>% filter(site_name == bigG) %>% select(WaterYear, tyz_sum_perc) %>% mutate(WaterYear = as.factor(WaterYear))) %>%\n    ggplot(aes(x = quant, y = sddur, color = tyz_sum_perc, group = WaterYear, shape = WaterYear)) +\n    stat_smooth() +\n    geom_point() +\n    scale_color_gradient(low = \"red\", high = \"blue\", limits = c(0,100)) +\n    xlab(\"Low flow threshold (percentile)\") + ylab(\"Among-site SD(duration)\") +\n    theme_bw() + \n    theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),\n          legend.position = \"bottom\", legend.direction = \"vertical\", legend.key.height = unit(0.3, 'cm')) \n  \n  # barplot 50th perc\n  p30 <- dd %>% \n    ggplot(aes(x = factor(site_name, levels = (mysites)), y = duration_50_fix_prop)) +\n    geom_bar(aes(fill = designation), stat = \"identity\") +\n    scale_fill_manual(values = c(\"grey20\", \"grey55\")) +\n    facet_wrap2(~WaterYear, ncol = 1, strip = strip_themed(background_x = elem_list_rect(fill = alpha(unique(layer_data(p_sds)[,1]), 0.5)))) +\n    ylim(0,1) +\n    ylab(\"Days below low flow threshold (%JAS)\") + ggtitle(\"50th perc.\") +\n    theme_bw() + \n    theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),\n          legend.position = \"none\", axis.title.x = element_blank(),\n          panel.grid.major = element_blank(), panel.grid.minor = element_blank())\n  # barplot 25th perc.\n  p20 <- dd %>% \n    ggplot(aes(x = factor(site_name, levels = (mysites)), y = duration_25_fix_prop)) +\n    geom_bar(aes(fill = designation), stat = \"identity\") +\n    scale_fill_manual(values = c(\"grey20\", \"grey55\")) +\n    facet_wrap2(~WaterYear, ncol = 1, strip = strip_themed(background_x = elem_list_rect(fill = alpha(unique(layer_data(p_sds)[,1]), 0.5)))) +\n    ylim(0,1) +\n    ylab(\"Days below low flow threshold (%JAS)\") + ggtitle(\"25th perc.\") +\n    theme_bw() + \n    theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),\n          legend.position = \"none\", axis.title.x = element_blank(),\n          panel.grid.major = element_blank(), panel.grid.minor = element_blank())\n  # barplot 10th perc.\n  p10 <- dd %>% \n    ggplot(aes(x = factor(site_name, levels = (mysites)), y = duration_10_fix_prop)) +\n    geom_bar(aes(fill = designation), stat = \"identity\") +\n    scale_fill_manual(values = c(\"grey20\", \"grey55\")) +\n    facet_wrap2(~WaterYear, ncol = 1, strip = strip_themed(background_x = elem_list_rect(fill = alpha(unique(layer_data(p_sds)[,1]), 0.5)))) +\n    ylim(0,1) +\n    ylab(\"Days below low flow threshold (%JAS)\") + ggtitle(\"10th perc.\") +\n    theme_bw() + \n    theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),\n          legend.position = \"none\", axis.title.x = element_blank(),\n          panel.grid.major = element_blank(), panel.grid.minor = element_blank())\n  # barplot 5th perc.\n  p05 <- dd %>% \n    ggplot(aes(x = factor(site_name, levels = (mysites)), y = duration_05_fix_prop)) +\n    geom_bar(aes(fill = designation), stat = \"identity\") +\n    scale_fill_manual(values = c(\"grey20\", \"grey55\")) +\n    facet_wrap2(~WaterYear, ncol = 1, strip = strip_themed(background_x = elem_list_rect(fill = alpha(unique(layer_data(p_sds)[,1]), 0.5)))) +\n    ylim(0,1) +\n    ylab(\"Days below low flow threshold (%JAS)\") + ggtitle(\"5th perc.\") +\n    theme_bw() + \n    theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),\n          legend.position = \"none\", axis.title.x = element_blank(),\n          panel.grid.major = element_blank(), panel.grid.minor = element_blank())\n  # barplot 2nd perc\n  p02 <- dd %>% \n    ggplot(aes(x = factor(site_name, levels = (mysites)), y = duration_02_fix_prop)) +\n    geom_bar(aes(fill = designation), stat = \"identity\") +\n    scale_fill_manual(values = c(\"grey20\", \"grey55\")) +\n    facet_wrap2(~WaterYear, ncol = 1, strip = strip_themed(background_x = elem_list_rect(fill = alpha(unique(layer_data(p_sds)[,1]), 0.5)))) +\n    ylim(0,1) +\n    ylab(\"Days below low flow threshold (%JAS)\") + ggtitle(\"2nd perc.\") +\n    theme_bw() + \n    theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),\n          legend.position = \"none\", axis.title.x = element_blank(),\n          panel.grid.major = element_blank(), panel.grid.minor = element_blank())\n\n  # arrange plots\n  egg::ggarrange(p02 + theme(plot.margin = margin(r = 1, t = 5, b = 5)), \n                 p05 + theme(axis.text.y = element_blank(), axis.title.y = element_blank(), plot.margin = margin(r = 1, l = 1)), \n                 p10 + theme(axis.text.y = element_blank(), axis.title.y = element_blank(), plot.margin = margin(r = 1, l = 1)), \n                 p20 + theme(axis.text.y = element_blank(), axis.title.y = element_blank(), plot.margin = margin(r = 1, l = 1)), \n                 p30 + theme(axis.text.y = element_blank(), axis.title.y = element_blank(), plot.margin = margin(r = 1, l = 1)),\n                 p_sds,\n                 nrow = 1, widths = c(1,1,1,1,1,2.5))\n}\n\n\ndeficitplotfun_sub <- function(bas, bigG, months, wateryears, dropsites = NA) {\n  # filter and summarize data\n  dd_all <- defdur_ssn_sub %>% filter(basin == bas | site_name == bigG, WaterYear %in% wateryears, !site_name %in% dropsites) \n  dd <- defdur_ssn_sub %>% \n    filter(basin == bas | site_name == bigG, WaterYear %in% wateryears, !site_name %in% dropsites) %>%\n    mutate(WaterYear = factor(WaterYear, levels = wateryears))\n  \n  # get y-axis limit\n  ymax <- max(dd %>% select(deficit_50_fix:deficit_02_fix))\n\n  # order sites, Big G first\n  mysites <- c(unique(unlist(dd %>% filter(designation == \"big\") %>% select(site_name))),\n               unique(unlist(dd %>% filter(designation == \"little\") %>% select(site_name))))\n\n  # among site StDev ~ percentile\n  p_sds <- dd %>% \n    gather(deficit_50_fix:deficit_02_fix, key = \"metric\", value = \"deficit\") %>%\n    mutate(quant = as.numeric(gsub(\".*?([0-9]+).*\", \"\\\\1\", metric)) ) %>% \n    filter(designation == \"little\") %>%\n    group_by(WaterYear, totalyield_z, metric, quant) %>%\n    summarize(sddur = sd(deficit, na.rm = TRUE)) %>%\n    ungroup() %>%\n    #left_join(dd %>% filter(site_name == bigG) %>% select(WaterYear, deficit_25_fix) %>% rename(def25 = deficit_25_fix)) %>%\n    left_join(wateravail %>% filter(site_name == bigG) %>% select(WaterYear, tyz_sum_perc) %>% mutate(WaterYear = as.factor(WaterYear))) %>%\n    ggplot(aes(x = quant, y = sddur, color = tyz_sum_perc, group = WaterYear, shape = WaterYear)) +\n    stat_smooth() +\n    geom_point() +\n    scale_color_gradient(low = \"red\", high = \"blue\", limits = c(0,100)) +\n    xlab(\"Low flow threshold (percentile)\") + ylab(\"Among-site SD(deficit)\") +\n    theme_bw() + \n    theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),\n          legend.position = \"bottom\", legend.direction = \"vertical\", legend.key.height = unit(0.3, 'cm'))\n  \n  # barplot 50th perc\n  p30 <- dd %>% \n    ggplot(aes(x = factor(site_name, levels = (mysites)), y = deficit_50_fix)) +\n    geom_bar(aes(fill = designation), stat = \"identity\") +\n    scale_fill_manual(values = c(\"grey20\", \"grey55\")) +\n    facet_wrap2(~WaterYear, ncol = 1, strip = strip_themed(background_x = elem_list_rect(fill = alpha(unique(layer_data(p_sds)[,1]), 0.5)))) +\n    ylim(0,ymax) +\n    ylab(\"Drought deficit (mm, JAS)\") + ggtitle(\"50th perc.\") +\n    theme_bw() + \n    theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),\n          legend.position = \"none\", axis.title.x = element_blank(),\n          panel.grid.major = element_blank(), panel.grid.minor = element_blank())\n  # barplot 25th perc.\n  p20 <- dd %>% \n    ggplot(aes(x = factor(site_name, levels = (mysites)), y = deficit_25_fix)) +\n    geom_bar(aes(fill = designation), stat = \"identity\") +\n    scale_fill_manual(values = c(\"grey20\", \"grey55\")) +\n    facet_wrap2(~WaterYear, ncol = 1, strip = strip_themed(background_x = elem_list_rect(fill = alpha(unique(layer_data(p_sds)[,1]), 0.5)))) +\n    ylim(0,ymax) +\n    ylab(\"Drought deficit (mm, JAS)\") + ggtitle(\"25th perc.\") +\n    theme_bw() + \n    theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),\n          legend.position = \"none\", axis.title.x = element_blank(),\n          panel.grid.major = element_blank(), panel.grid.minor = element_blank())\n  # barplot 10th perc.\n  p10 <- dd %>% \n    ggplot(aes(x = factor(site_name, levels = (mysites)), y = deficit_10_fix)) +\n    geom_bar(aes(fill = designation), stat = \"identity\") +\n    scale_fill_manual(values = c(\"grey20\", \"grey55\")) +\n    facet_wrap2(~WaterYear, ncol = 1, strip = strip_themed(background_x = elem_list_rect(fill = alpha(unique(layer_data(p_sds)[,1]), 0.5)))) +\n    ylim(0,ymax) +\n    ylab(\"Drought deficit (mm, JAS)\") + ggtitle(\"10th perc.\") +\n    theme_bw() + \n    theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),\n          legend.position = \"none\", axis.title.x = element_blank(),\n          panel.grid.major = element_blank(), panel.grid.minor = element_blank())\n  # barplot 5th perc.\n  p05 <- dd %>% \n    ggplot(aes(x = factor(site_name, levels = (mysites)), y = deficit_05_fix)) +\n    geom_bar(aes(fill = designation), stat = \"identity\") +\n    scale_fill_manual(values = c(\"grey20\", \"grey55\")) +\n    facet_wrap2(~WaterYear, ncol = 1, strip = strip_themed(background_x = elem_list_rect(fill = alpha(unique(layer_data(p_sds)[,1]), 0.5)))) +\n    ylim(0,ymax) +\n    ylab(\"Drought deficit (mm, JAS)\") + ggtitle(\"5th perc.\") +\n    theme_bw() + \n    theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),\n          legend.position = \"none\", axis.title.x = element_blank(),\n          panel.grid.major = element_blank(), panel.grid.minor = element_blank())\n  # barplot 2nd perc\n  p02 <- dd %>% \n    ggplot(aes(x = factor(site_name, levels = (mysites)), y = deficit_02_fix)) +\n    geom_bar(aes(fill = designation), stat = \"identity\") +\n    scale_fill_manual(values = c(\"grey20\", \"grey55\")) +\n    facet_wrap2(~WaterYear, ncol = 1, strip = strip_themed(background_x = elem_list_rect(fill = alpha(unique(layer_data(p_sds)[,1]), 0.5)))) +\n    ylim(0,ymax) +\n    ylab(\"Drought deficit (JAS)\") + ggtitle(\"2nd perc.\") +\n    theme_bw() + \n    theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),\n          legend.position = \"none\", axis.title.x = element_blank(),\n          panel.grid.major = element_blank(), panel.grid.minor = element_blank())\n\n  # arrange plots\n  egg::ggarrange(p02 + theme(plot.margin = margin(r = 1, t = 5, b = 5)), \n                 p05 + theme(axis.text.y = element_blank(), axis.title.y = element_blank(), plot.margin = margin(r = 1, l = 1)), \n                 p10 + theme(axis.text.y = element_blank(), axis.title.y = element_blank(), plot.margin = margin(r = 1, l = 1)), \n                 p20 + theme(axis.text.y = element_blank(), axis.title.y = element_blank(), plot.margin = margin(r = 1, l = 1)), \n                 p30 + theme(axis.text.y = element_blank(), axis.title.y = element_blank(), plot.margin = margin(r = 1, l = 1)),\n                 p_sds,\n                 nrow = 1, widths = c(1,1,1,1,1,2.5))\n}\n```\n:::\n\n\n\n\n\n\n\n\n### Duration\n\nShow proportion of days (July - September) below different low flow thresholds (derived from temporally restricted, site-specific data) for each site during a relatively wet year and a dry year. Then, for each year, plot the relationship between the among site (little g's only) standard deviation of low flow duration and the low flow threshold used to calculate duration\n\n::: panel-tabset\n#### West Brook\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndurationplotfun_sub(bas = \"West Brook\", bigG = \"South River Conway NWIS\", months = c(7:9), wateryears = c(2022, 2020, 2021, 2023))\n```\n\n::: {.cell-output-display}\n![](ReferenceLowFlow_files/figure-html/unnamed-chunk-20-1.png){width=960}\n:::\n:::\n\n\n\n\n\n\n\n#### Staunton River\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndurationplotfun_sub(bas = \"Staunton River\", bigG = \"Rapidan River NWIS\", months = c(7:9), wateryears = c(2019, 2022, 2021, 2020))\n```\n\n::: {.cell-output-display}\n![](ReferenceLowFlow_files/figure-html/unnamed-chunk-21-1.png){width=960}\n:::\n:::\n\n\n\n\n\n\n\n#### Flathead\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndurationplotfun_sub(bas = \"Flathead\", bigG = \"North Fork Flathead River NWIS\", months = c(7:9), wateryears = c(2019, 2021, 2020))\n```\n\n::: {.cell-output-display}\n![](ReferenceLowFlow_files/figure-html/unnamed-chunk-22-1.png){width=960}\n:::\n:::\n\n\n\n\n\n\n\n#### Snake River\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndurationplotfun_sub(bas = \"Snake River\", bigG = \"Pacific Creek at Moran NWIS\", months = c(7:9), wateryears = c(2021, 2020, 2022))\n```\n\n::: {.cell-output-display}\n![](ReferenceLowFlow_files/figure-html/unnamed-chunk-23-1.png){width=960}\n:::\n:::\n\n\n\n\n\n\n\n#### Yellowstone River\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndurationplotfun_sub(bas = \"Shields River\", bigG = \"Yellowstone River Livingston NWIS\", months = c(7:9), wateryears = c(2020, 2019, 2023, 2017), dropsites = c(\"Shields River Valley Ranch\", \"Buck Creek\", \"Lodgepole Creek\"))\n```\n\n::: {.cell-output-display}\n![](ReferenceLowFlow_files/figure-html/unnamed-chunk-24-1.png){width=960}\n:::\n:::\n\n\n\n\n\n\n\n#### Donner Blitzen\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndurationplotfun_sub(bas = \"Donner Blitzen\", bigG = \"Donner Blitzen River nr Frenchglen NWIS\", months = c(7:9), wateryears = c(2021,2020,2022, 2019))\n```\n\n::: {.cell-output-display}\n![](ReferenceLowFlow_files/figure-html/unnamed-chunk-25-1.png){width=960}\n:::\n:::\n\n\n\n\n\n\n\n:::\n\n### Deficit\n\nShow total drought deficit (mm) relative to different low flow thresholds (derived from long-term Big G data) for each site during a relatively wet year and a dry year. Then, for each year, plot the relationship between the among site (little g's only) standard deviation of deficit and the low flow threshold used to calculate deficit\n\n::: panel-tabset\n#### West Brook\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndeficitplotfun_sub(bas = \"West Brook\", bigG = \"South River Conway NWIS\", months = c(7:9), wateryears = c(2022, 2020, 2021, 2023))\n```\n\n::: {.cell-output-display}\n![](ReferenceLowFlow_files/figure-html/unnamed-chunk-26-1.png){width=960}\n:::\n:::\n\n\n\n\n\n\n\n#### Staunton River\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndeficitplotfun_sub(bas = \"Staunton River\", bigG = \"Rapidan River NWIS\", months = c(7:9), wateryears = c(2019, 2022, 2021, 2020))\n```\n\n::: {.cell-output-display}\n![](ReferenceLowFlow_files/figure-html/unnamed-chunk-27-1.png){width=960}\n:::\n:::\n\n\n\n\n\n\n\n#### Flathead\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndeficitplotfun_sub(bas = \"Flathead\", bigG = \"North Fork Flathead River NWIS\", months = c(7:9), wateryears = c(2019, 2021, 2020))\n```\n\n::: {.cell-output-display}\n![](ReferenceLowFlow_files/figure-html/unnamed-chunk-28-1.png){width=960}\n:::\n:::\n\n\n\n\n\n\n\n#### Snake River\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndeficitplotfun_sub(bas = \"Snake River\", bigG = \"Pacific Creek at Moran NWIS\", months = c(7:9), wateryears = c(2021, 2020, 2022))\n```\n\n::: {.cell-output-display}\n![](ReferenceLowFlow_files/figure-html/unnamed-chunk-29-1.png){width=960}\n:::\n:::\n\n\n\n\n\n\n\n#### Yellowstone River\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndeficitplotfun_sub(bas = \"Shields River\", bigG = \"Yellowstone River Livingston NWIS\", months = c(7:9), wateryears = c(2020, 2019, 2023, 2017), dropsites = c(\"Shields River Valley Ranch\", \"Buck Creek\", \"Lodgepole Creek\"))\n```\n\n::: {.cell-output-display}\n![](ReferenceLowFlow_files/figure-html/unnamed-chunk-30-1.png){width=960}\n:::\n:::\n\n\n\n\n\n\n\n#### Donner Blitzen\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndeficitplotfun_sub(bas = \"Donner Blitzen\", bigG = \"Donner Blitzen River nr Frenchglen NWIS\", months = c(7:9), wateryears = c(2021,2020,2022, 2019))\n```\n\n::: {.cell-output-display}\n![](ReferenceLowFlow_files/figure-html/unnamed-chunk-31-1.png){width=960}\n:::\n:::\n\n\n\n\n\n\n\n:::\n\n\n### Summary plots\n\nWhat is the relationship between regional water availability (total summer flow percentile from long-term big G flow data) and spatial variation in little g drought duration and deficit?\n\nHypothesis: spatial variation in drought duration and deficit increases in dry years as controls on little G streamflow shift from regional to local (catchment) scales. (This follows directly from objective 1, but specifically considers low flow conditions).\n\nRename basins\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndefdur_ssn_sub2 <- defdur_ssn_sub %>%\n  mutate(basin = ifelse(basin == \"Shields River\", \"Yellowstone River\",\n                        ifelse(basin == \"Flathead\", \"Flathead River\", \n                               ifelse(basin == \"Donner Blitzen\", \"Donner-Blitzen River\", basin)))) %>%\n  mutate(basin = factor(basin, levels = c(\"West Brook\", \"Piney River\", \"Staunton River\", \"Paine Run\", \n                                          \"Flathead River\", \"Yellowstone River\", \"Snake River\", \"Donner-Blitzen River\")))\n```\n:::\n\n\n\n\n\n\n\n\n::: panel-tabset\n##### Duration: basins combined\n\n\n\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](ReferenceLowFlow_files/figure-html/unnamed-chunk-33-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n\n##### Duration: by basin\n\n\n\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](ReferenceLowFlow_files/figure-html/unnamed-chunk-34-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n\n##### Deficit: basins combined\n\n\n\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](ReferenceLowFlow_files/figure-html/unnamed-chunk-35-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n\n##### Deficit: by basin\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\np1 <- defdur_ssn_sub %>%\n  filter(designation == \"little\") %>%\n  group_by(basin, WaterYear) %>%\n  summarize(sddur = sd(deficit_02_fix)) %>%\n  ungroup() %>%\n  left_join(wateravail %>% select(basin, WaterYear, totalyield:tyz_sum_perc)) %>%\n  ggplot(aes(x = tyz_sum_perc, y = sddur, color = basin)) +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  geom_point(aes(color = basin)) +\n  #facet_wrap(~basin) +\n  annotate(\"text\", label = \"2nd perc.\", x = Inf, y = Inf, hjust = 1, vjust = 1) +\n  theme_bw() + theme(panel.grid = element_blank(), axis.title = element_blank(), axis.text.x = element_blank(), legend.position = \"none\") + \n  ylim(0,6)\n\np2 <- defdur_ssn_sub %>%\n  filter(designation == \"little\") %>%\n  group_by(basin, WaterYear) %>%\n  summarize(sddur = sd(deficit_05_fix)) %>%\n  ungroup() %>%\n  left_join(wateravail %>% select(basin, WaterYear, totalyield:tyz_sum_perc)) %>%\n  ggplot(aes(x = tyz_sum_perc, y = sddur, color = basin)) +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  geom_point(aes(color = basin)) +\n  #facet_wrap(~basin) +\n  annotate(\"text\", label = \"5th perc.\", x = Inf, y = Inf, hjust = 1, vjust = 1) +\n  theme_bw() + theme(panel.grid = element_blank(), axis.title = element_blank(), axis.text = element_blank()) + ylim(0,6)\n\np3 <- defdur_ssn_sub %>%\n  filter(designation == \"little\") %>%\n  group_by(basin, WaterYear) %>%\n  summarize(sddur = sd(deficit_10_fix)) %>%\n  ungroup() %>%\n  left_join(wateravail %>% select(basin, WaterYear, totalyield:tyz_sum_perc)) %>%\n  ggplot(aes(x = tyz_sum_perc, y = sddur, color = basin)) +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  geom_point(aes(color = basin)) +\n  #facet_wrap(~basin) +\n  annotate(\"text\", label = \"10th perc.\", x = Inf, y = Inf, hjust = 1, vjust = 1) +\n  theme_bw() + theme(panel.grid = element_blank(), axis.title = element_blank(), legend.position = \"none\") + ylim(0,6)\n\np4 <- defdur_ssn_sub %>%\n  filter(designation == \"little\") %>%\n  group_by(basin, WaterYear) %>%\n  summarize(sddur = sd(deficit_20_fix)) %>%\n  ungroup() %>%\n  left_join(wateravail %>% select(basin, WaterYear, totalyield:tyz_sum_perc)) %>%\n  ggplot(aes(x = tyz_sum_perc, y = sddur, color = basin)) +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  geom_point(aes(color = basin)) +\n  #facet_wrap(~basin) +\n  annotate(\"text\", label = \"20th perc.\", x = Inf, y = Inf, hjust = 1, vjust = 1) +\n  theme_bw() + theme(panel.grid = element_blank(), axis.title = element_blank(), axis.text.y = element_blank(), legend.position = \"none\") + ylim(0,6)\n\nannotate_figure(egg::ggarrange(p1, p2, p3, p4), \n                left = \"Among-site variation in drought deficit (SD)\", bottom = \"Regional water availability (percentile)\")\n```\n\n::: {.cell-output-display}\n![](ReferenceLowFlow_files/figure-html/unnamed-chunk-36-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n\n:::\n\n\nSummarize relationships across thresholds: how does the definition of \"low flow\"/\"drought\" change the way we understand the effect of regional water availability on spatial variation in low flow conditions?\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncolnums <- c(8:18)\neffecttib <- tibble(threshold = rep(NA, times = length(colnums)),\n                    int_est = rep(NA, times = length(colnums)),\n                    int_se = rep(NA, times = length(colnums)),\n                    slo_est = rep(NA, times = length(colnums)),\n                    slo_se = rep(NA, times = length(colnums)))\n\nfor (i in 1:length(colnums)) {\n  effecttib$threshold[i] <- parse_number(names(defdur_ssn_sub2)[colnums[i]+2])\n  dd <- defdur_ssn_sub2 %>%\n    filter(designation == \"little\", ndays >= 87) %>%\n    group_by(basin, WaterYear) %>%\n    summarize(n = n()) %>%\n    ungroup() %>%\n    left_join(defdur_ssn_sub2 %>%\n                filter(designation == \"little\", ndays >= 87) %>%\n                group_by(basin, WaterYear) %>%\n                summarize_at(colnums[i], funs(min, max)) %>%\n                ungroup()) %>%\n    mutate(rangedur = max-min) %>%\n    left_join(wateravail2 %>% select(basin, WaterYear, tyz_sum_perc)) #%>%\n    #rename(sddur = 4)\n  mymod <- summary(lm(rangedur ~ tyz_sum_perc, data = dd, weights = n))\n  effecttib$int_est[i] <- mymod$coefficients[1,1]\n  effecttib$int_se[i] <- mymod$coefficients[1,2]\n  effecttib$slo_est[i] <- mymod$coefficients[2,1]\n  effecttib$slo_se[i] <- mymod$coefficients[2,2]\n}\n\np1 <- effecttib %>%\n  ggplot(aes(x = threshold, y = int_est)) +\n  geom_line(color = \"grey\") +\n  geom_point() + \n  geom_errorbar(aes(ymin = int_est-int_se, ymax = int_est+int_se), width = 1) +\n  geom_abline(intercept = 0, slope = 0, linetype = \"dashed\") +\n  xlab(\"Low flow threshold (percentile)\") + ylab(\"Intercept (spatial variation at\\n0% regional water availability)\") +\n  theme_classic()\n\np2 <- effecttib %>%\n  ggplot(aes(x = threshold, y = slo_est)) +\n  geom_line(color = \"grey\") +\n  geom_point() + \n  geom_errorbar(aes(ymin = slo_est-slo_se, ymax = slo_est+slo_se), width = 1) +\n  geom_abline(intercept = 0, slope = 0, linetype = \"dashed\") +\n  xlab(\"Low flow threshold (percentile)\") + ylab(\"Slope (effect of regional water\\navailability on spatial variation)\") +\n  theme_classic()\n\negg::ggarrange(p1, p2, nrow = 2)\n```\n\n::: {.cell-output-display}\n![](ReferenceLowFlow_files/figure-html/unnamed-chunk-37-1.png){width=384}\n:::\n:::\n\n\n\n\n\n\n\n\n\n## Model drought agreement\n\nHow suitable are reference gages for predicting low flow conditions in headwater stream networks? \n\n* Calculate the difference between low flow duration at little g's versus that at big G and model the relationship between these differences and basin-specific annual water availability to understand how reference gage suitability may change with regional climatic context\n* Include effects of water availability on the regression uncertainty (sigma) to evaluate how spatial heterogeneity in low flow conditions changes with regional water availability. \n  + Calculate attenuation strength (the ratio between model standard deviation in dry versus wet years, sensu Chezik *et al.* 2017) to describe the degree to which spatial variation in low flow conditions changes with annual water availability\n* Include random effects for basin to account for basin-level differences in the primary (and sigma?) relationship\n* Iteratively fit the model to data derived from a range of critical low flow thresholds to evaluate how the definition of low flows/drought affects inferences\n\n\n### Data manipulation and plots\n\nCalculate difference in drought duration between headwaters gages and reference gage\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndefdur_ssn_sub2_little <- defdur_ssn_sub2 %>% filter(designation == \"little\")\ndefdur_ssn_sub2_big <- defdur_ssn_sub2 %>% filter(designation == \"big\") %>% select(basin, WaterYear, ndays, duration_50_fix:duration_02_fix)\nnames(defdur_ssn_sub2_big) <- c(\"basin\", \"WaterYear\", \"ndays_big\", \"duration_50_fix_big\", \"duration_45_fix_big\", \"duration_40_fix_big\", \"duration_35_fix_big\", \"duration_30_fix_big\", \"duration_25_fix_big\", \"duration_20_fix_big\", \"duration_15_fix_big\", \"duration_10_fix_big\", \"duration_05_fix_big\", \"duration_02_fix_big\")\n\njoineddefdur <- defdur_ssn_sub2_little %>% left_join(defdur_ssn_sub2_big) %>%\n  mutate(ndays_diff = ndays - ndays_big,\n         duration_50_fix_diff = duration_50_fix - duration_50_fix_big,\n         duration_45_fix_diff = duration_45_fix - duration_45_fix_big,\n         duration_40_fix_diff = duration_40_fix - duration_40_fix_big,\n         duration_35_fix_diff = duration_35_fix - duration_35_fix_big,\n         duration_30_fix_diff = duration_30_fix - duration_30_fix_big,\n         duration_25_fix_diff = duration_25_fix - duration_25_fix_big,\n         duration_20_fix_diff = duration_20_fix - duration_20_fix_big,\n         duration_15_fix_diff = duration_15_fix - duration_15_fix_big,\n         duration_10_fix_diff = duration_10_fix - duration_10_fix_big,\n         duration_05_fix_diff = duration_05_fix - duration_05_fix_big,\n         duration_02_fix_diff = duration_02_fix - duration_02_fix_big) %>%\n  left_join(wateravail2 %>% select(basin, WaterYear, totalyield:tyz_sum_perc))\n\njoineddefdur <- joineddefdur %>% mutate(basin_num = as.numeric(basin))\n\njoineddefdur %>% group_by(basin) %>% summarize(basin_num = unique(basin_num))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 2\n  basin                basin_num\n  <fct>                    <dbl>\n1 West Brook                   1\n2 Staunton River               3\n3 Flathead River               5\n4 Yellowstone River            6\n5 Snake River                  7\n6 Donner-Blitzen River         8\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\njoineddefdur %>% filter(basin == \"Donner-Blitzen River\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 16 × 73\n   site_name      basin subbasin region designation CalendarYear WaterYear ndays\n   <chr>          <fct> <chr>    <chr>  <chr>              <dbl>     <dbl> <int>\n 1 Donner Blitze… Donn… Donner … Oreg   little              2019      2019    68\n 2 Donner Blitze… Donn… Donner … Oreg   little              2020      2020    92\n 3 Donner Blitze… Donn… Donner … Oreg   little              2021      2021    92\n 4 Donner Blitze… Donn… Donner … Oreg   little              2022      2022    92\n 5 Donner Blitze… Donn… Donner … Oreg   little              2019      2019    70\n 6 Donner Blitze… Donn… Donner … Oreg   little              2020      2020    92\n 7 Donner Blitze… Donn… Donner … Oreg   little              2021      2021    92\n 8 Donner Blitze… Donn… Donner … Oreg   little              2022      2022    92\n 9 Donner Blitze… Donn… Donner … Oreg   little              2019      2019    69\n10 Donner Blitze… Donn… Donner … Oreg   little              2020      2020    92\n11 Donner Blitze… Donn… Donner … Oreg   little              2021      2021    92\n12 Donner Blitze… Donn… Donner … Oreg   little              2022      2022    92\n13 Fish Creek NW… Donn… Donner … Oreg   little              2019      2019    68\n14 Fish Creek NW… Donn… Donner … Oreg   little              2020      2020    92\n15 Fish Creek NW… Donn… Donner … Oreg   little              2021      2021    92\n16 Fish Creek NW… Donn… Donner … Oreg   little              2022      2022    92\n# ℹ 65 more variables: propdays <dbl>, duration_50_fix <int>,\n#   duration_45_fix <int>, duration_40_fix <int>, duration_35_fix <int>,\n#   duration_30_fix <int>, duration_25_fix <int>, duration_20_fix <int>,\n#   duration_15_fix <int>, duration_10_fix <int>, duration_05_fix <int>,\n#   duration_02_fix <int>, duration_50_fix_prop <dbl>,\n#   duration_45_fix_prop <dbl>, duration_40_fix_prop <dbl>,\n#   duration_35_fix_prop <dbl>, duration_30_fix_prop <dbl>, …\n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n\n\nPlot difference in drought duration by regional water availability for 4 low flow thresholds\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\np1 <- joineddefdur %>%\n  mutate(groups = paste(basin, WaterYear, sep = \"_\")) %>% \n  ggplot(aes(x = tyz_sum_perc, y = duration_10_fix_diff)) +\n  # geom_quantile(quantiles = c(0.05, 0.5, 0.95)) +\n  geom_point(aes(fill = basin), shape = 21, size = 2, position = position_jitter(seed = 1, width = 1)) +\n  scale_fill_manual(values = mycols) +\n  theme_bw() + theme(panel.grid = element_blank()) + ylim(-60,60)\n\np2 <- joineddefdur %>%\n  mutate(groups = paste(basin, WaterYear, sep = \"_\")) %>% \n  ggplot(aes(x = tyz_sum_perc, y = duration_20_fix_diff)) +\n  # geom_quantile(quantiles = c(0.05, 0.5, 0.95)) +\n  geom_point(aes(fill = basin), shape = 21, size = 2, position = position_jitter(seed = 1, width = 1)) +\n  scale_fill_manual(values = mycols) +\n  theme_bw() + theme(panel.grid = element_blank()) + ylim(-60,60)\n\np3 <- joineddefdur %>%\n  mutate(groups = paste(basin, WaterYear, sep = \"_\")) %>% \n  ggplot(aes(x = tyz_sum_perc, y = duration_30_fix_diff)) +\n  # geom_quantile(quantiles = c(0.05, 0.5, 0.95)) +\n  geom_point(aes(fill = basin), shape = 21, size = 2, position = position_jitter(seed = 1, width = 1)) +\n  scale_fill_manual(values = mycols) +\n  theme_bw() + theme(panel.grid = element_blank()) + ylim(-60,60)\n\np4 <- joineddefdur %>%\n  mutate(groups = paste(basin, WaterYear, sep = \"_\")) %>% \n  ggplot(aes(x = tyz_sum_perc, y = duration_40_fix_diff)) +\n  # geom_quantile(quantiles = c(0.05, 0.5, 0.95)) +\n  geom_point(aes(fill = basin), shape = 21, size = 2, position = position_jitter(seed = 1, width = 1)) +\n  scale_fill_manual(values = mycols) +\n  theme_bw() + theme(panel.grid = element_blank()) + ylim(-60,60)\n\nggarrange(p1, p2, p3, p4, nrow = 2, ncol = 2, common.legend = TRUE, legend = \"right\")\n```\n\n::: {.cell-output-display}\n![](ReferenceLowFlow_files/figure-html/unnamed-chunk-40-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n### Simple \n\nSpecify ~simple JAGS model: linear regression between regional water availability and low flow duration, where sigma is modeled as a function of regional water availability. No random effects for network.\n\n#### Specify and fit JAGS models\n\nThis is the form we used originally, pooling data across basins to estimate a common relationship. However, this is overly simplified, as it fails to account for basin-level groupings in the data\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncat(\"model {\n\n##--- LIKELIHOOD ---------------------------------------------------##\n\nfor (i in 1:nObs) {\n\n  D[i] ~ dnorm(mu[i], pow(sigma[i], -2))\n  mu[i] <- alpha + beta * W[i]\n  log(sigma[i]) <- sig.alpha + sig.beta * W[i]\n  \n  # Log-likelihood\n  loglik[i] <- logdensity.norm(D[i], mu[i], pow(sigma[i], -2))\n  }\n\n\n##--- PRIORS --------------------------------------------------------##\n\nalpha ~ dnorm(0, pow(10, -2))\nbeta ~ dnorm(0, pow(10, -2))\nsig.alpha ~ dnorm(0, pow(10, -2))\nsig.beta ~ dnorm(0, pow(10, -2))\n\n\n##--- DERIVED VALUES ------------------------------------------------##\n\n# attenuation strength\nAS <- exp(sig.alpha + sig.beta * 0) / exp(sig.alpha + sig.beta * 100)\n\n# prediction means\nfor (i in 1:nPreds) { P0m[i] <- alpha + beta * Wp[i] }\n\n# prediction intervals\nfor (i in 1:nPreds) { P0i[i] ~ dnorm(alpha + beta * Wp[i], pow(exp(sig.alpha + sig.beta * Wp[i]), -2)) }\n\n# sigma means\nfor (i in 1:nPreds) { S0m[i] <- exp(sig.alpha + sig.beta * Wp[i]) }\n\n}\", file = \"C:/Users/jbaldock/OneDrive - DOI/Documents/USGS/EcoDrought/EcoDrought Working/EcoDrought-Analysis/Qualitative/DroughtModel.txt\")\n```\n:::\n\n\n\n\n\n\n\n\nFit model for each threshold, in a loop\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodlist_simple <- list()\nnpreds <- 101\nthresh <- c(50,45,40,35,30,25,20,15,10,5,2)\n\nfor (i in 1:11) {\n  names(joineddefdur)[57+i]\n  jags.data <- list(\"nObs\" = dim(joineddefdur)[1], \n                    \"D\" = unlist(joineddefdur[,57+i]), \n                    \"W\" = joineddefdur$tyz_sum_perc,\n                    \"nPreds\" = npreds, \"Wp\" = seq(from = 0, to = 100, length.out = npreds))\n  jags.params <- c(\"alpha\", \"beta\", \"sig.alpha\", \"sig.beta\", \"AS\", \"D\", \"P0m\", \"P0i\", \"S0m\", \"loglik\")\n  fit <- jags(data = jags.data, parameters.to.save = jags.params,\n              model.file = \"C:/Users/jbaldock/OneDrive - DOI/Documents/USGS/EcoDrought/EcoDrought Working/EcoDrought-Analysis/Qualitative/DroughtModel.txt\",\n              n.chains = 3, n.thin = 10, n.burnin = 1000, n.iter = 6000, DIC = FALSE)\n  modlist_simple[[i]] <- fit\n}\n```\n:::\n\n\n\n\n\n\n\n\n\n#### Compare thresholds\n\nGet attenuation strength (*sensu* Chezik et al. 2017) for each model (low flow threshold, %) and summarize as median and 95% credible interval\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nattenlist <- list()\nsigbetalist <- list()\nsigalphalist <- list()\n\nfor (i in 1:length(modlist_simple)) { \n  attenlist[[i]] <- modlist_simple[[i]]$BUGSoutput$sims.list$AS \n  sigbetalist[[i]] <- modlist_simple[[i]]$BUGSoutput$sims.list$sig.beta \n  sigalphalist[[i]] <- modlist_simple[[i]]$BUGSoutput$sims.list$sig.alpha \n}\n\nattentib <- tibble(threshold = rep(thresh, each = 1500), attenuation = unlist(attenlist))\nsigbetatib <- tibble(threshold = rep(thresh, each = 1500), sigbeta = unlist(sigbetalist))\nsigalphatib <- tibble(threshold = rep(thresh, each = 1500), sigalpha = unlist(sigalphalist))\n```\n:::\n\n\n\n\n\n\n\n\nPlot attenuation strength by low flow threshold\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nattentib %>% \n  group_by(threshold) %>% \n  summarize(median = quantile(attenuation, probs = 0.50),\n            cilow = quantile(attenuation, probs = 0.025),\n            ciupp = quantile(attenuation, probs = 0.975)) %>%\n  ungroup() %>%\n  ggplot() +\n  geom_abline(intercept = 1, slope = 0, linetype = \"dashed\", color = \"grey50\") +\n  geom_errorbar(aes(x = threshold, ymin = cilow, ymax = ciupp), width = 1) +\n  geom_point(aes(x = threshold, y = median)) +\n  theme_bw() + theme(panel.grid = element_blank()) + ylim(0,12.5) +\n  xlab(\"Low flow threshold (%)\") + ylab(\"Attenuation strength\")\n```\n\n::: {.cell-output-display}\n![](ReferenceLowFlow_files/figure-html/unnamed-chunk-44-1.png){width=672}\n:::\n\n```{.r .cell-code}\nsigbetatib %>% \n  group_by(threshold) %>% \n  summarize(median = quantile(sigbeta, probs = 0.50),\n            cilow = quantile(sigbeta, probs = 0.025),\n            ciupp = quantile(sigbeta, probs = 0.975)) %>%\n  ungroup() %>%\n  ggplot() +\n  geom_abline(intercept = 0, slope = 0, linetype = \"dashed\", color = \"grey50\") +\n  geom_errorbar(aes(x = threshold, ymin = cilow, ymax = ciupp), width = 1) +\n  geom_point(aes(x = threshold, y = median)) +\n  theme_bw() + theme(panel.grid = element_blank()) + ylim(-0.025,0.005) +\n  xlab(\"Low flow threshold (%)\") + ylab(\"sig.beta\")\n```\n\n::: {.cell-output-display}\n![](ReferenceLowFlow_files/figure-html/unnamed-chunk-44-2.png){width=672}\n:::\n\n```{.r .cell-code}\nsigalphatib %>% \n  group_by(threshold) %>% \n  summarize(median = quantile(sigalpha, probs = 0.50),\n            cilow = quantile(sigalpha, probs = 0.025),\n            ciupp = quantile(sigalpha, probs = 0.975)) %>%\n  ungroup() %>%\n  ggplot() +\n  geom_abline(intercept = 0, slope = 0, linetype = \"dashed\", color = \"grey50\") +\n  geom_errorbar(aes(x = threshold, ymin = cilow, ymax = ciupp), width = 1) +\n  geom_point(aes(x = threshold, y = median)) +\n  theme_bw() + theme(panel.grid = element_blank()) + #ylim(-0.025,0.005) +\n  xlab(\"Low flow threshold (%)\") + ylab(\"sig.alpha\")\n```\n\n::: {.cell-output-display}\n![](ReferenceLowFlow_files/figure-html/unnamed-chunk-44-3.png){width=672}\n:::\n:::\n\n\n\n\n\n\n\n\nSet top model based on strongest attenuation\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntop_mod <- modlist_simple[[8]]\nmodelout <- top_mod$BUGSoutput\nMcmcList <- vector(\"list\", length = dim(modelout$sims.array)[2])\nfor(i in 1:length(McmcList)) { McmcList[[i]] = as.mcmc(modelout$sims.array[,i,]) }\nMcmcdat <- rbind(McmcList[[1]], McmcList[[2]], McmcList[[3]])\n```\n:::\n\n\n\n\n\n\n\n\nTraceplots\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nMCMCtrace(top_mod, ind = TRUE, params = c(\"alpha\", \"beta\", \"sig.alpha\", \"sig.beta\", \"AS\"), pdf = FALSE)\n```\n\n::: {.cell-output-display}\n![](ReferenceLowFlow_files/figure-html/unnamed-chunk-46-1.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](ReferenceLowFlow_files/figure-html/unnamed-chunk-46-2.png){width=672}\n:::\n:::\n\n\n\n\n\n\n\n\n\n#### Plot model output\n\nPlot data and prediction interval\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# summarize lower and upper prediction intervales (attenuation)\nd_preds <- Mcmcdat[,grep(\"P0i\", colnames(Mcmcdat))]\npi_low <- apply(d_preds, 2, quantile, probs = c(0.025),  na.rm = TRUE)\npi_upp <- apply(d_preds, 2, quantile, probs = c(0.975),  na.rm = TRUE)\npi_med <- apply(Mcmcdat[,grep(\"P0m\", colnames(Mcmcdat))], 2, quantile, probs = c(0.5),  na.rm = TRUE)\n\n# plot\nggplot() +\n  geom_ribbon(aes(x = seq(from = 0, to = 100, by = 1), ymin = pi_low, ymax = pi_upp), alpha = 0.3) +\n  geom_line(aes(x = seq(from = 0, to = 100, by = 1), y = pi_med), size = 1, lineend = \"round\") +\n  geom_abline(intercept = 0, slope = 0, linetype = \"dashed\") +\n  geom_point(data = joineddefdur, aes(x = tyz_sum_perc, y = duration_15_fix_diff, fill = basin), \n             shape = 21, size = 2, position = position_jitter(seed = 1.3, width = 1)) +\n  scale_fill_manual(values = mycols) +\n  theme_bw() + theme(panel.grid = element_blank()) + #ylim(-60,60) +\n  xlab(\"Regional water availability (%)\") + ylab(\"Difference in low flow duration (days)\")\n```\n\n::: {.cell-output-display}\n![](ReferenceLowFlow_files/figure-html/unnamed-chunk-47-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n\n\nPlot effect of water availability on sigma\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# summarize lower and upper prediction intervales (attenuation)\nd_preds <- Mcmcdat[,grep(\"S0m\", colnames(Mcmcdat))]\npi_low <- apply(d_preds, 2, quantile, probs = c(0.025),  na.rm = TRUE)\npi_upp <- apply(d_preds, 2, quantile, probs = c(0.975),  na.rm = TRUE)\npi_med <- apply(d_preds, 2, quantile, probs = c(0.500),  na.rm = TRUE)\n\n# plot\nggplot() +\n  geom_ribbon(aes(x = seq(from = 0, to = 100, by = 1), ymin = pi_low, ymax = pi_upp), alpha = 0.3) +\n  geom_line(aes(x = seq(from = 0, to = 100, by = 1), y = pi_med), size = 1, lineend = \"round\") +\n  scale_fill_manual(values = mycols) +\n  theme_bw() + theme(panel.grid = element_blank()) + ylim(0,35) +\n  xlab(\"Regional water availability (%)\") + ylab(\"Model standard deviation\")\n```\n\n::: {.cell-output-display}\n![](ReferenceLowFlow_files/figure-html/unnamed-chunk-48-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n\n\n\n### Random effects\n\nAdd basin-level random effect to the intercept and slope of the primary relationship. Random effects on the mean, but not the variance, strike a reasonable balance between accounting for basin-level differences, while not overstepping the limits of the data. Per discussion with Ben Augustine (USGS NOROCK/EESC), it is generally rare to put random effects on variances; not because it doesn't work conceptually, but because variances require much more data to estimate well relative to means\n\n\n#### Specify and fit JAGS models\n\nSpecify model\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncat(\"model {\n\n##--- LIKELIHOOD ---------------------------------------------------##\n\nfor (i in 1:nObs) {\n\n  D[i] ~ dnorm(mu[i], pow(sigma[i], -2))\n  mu[i] <- alpha[basins[i]] + beta[basins[i]] * W[i]\n  log(sigma[i]) <- sig.alpha + sig.beta * W[i]\n  \n  # Log-likelihood\n  loglik[i] <- logdensity.norm(D[i], mu[i], pow(sigma[i], -2))\n  }\n\n\n##--- RANDOM EFFECTS ------------------------------------------------##\n\nfor (j in numBasins) {\n    alpha[j] ~ dnorm(mu.alpha, pow(sigma.alpha, -2)) \n    beta[j] ~ dnorm(mu.beta, pow(sigma.beta, -2))\n}\n    \n\n##--- PRIORS --------------------------------------------------------##\n\nmu.alpha ~ dnorm(0, pow(10, -2))\nmu.beta ~ dnorm(0, pow(10, -2))\n\nsigma.alpha ~ dunif(0, 100)\nsigma.beta ~ dunif(0, 100)\n\nsig.alpha ~ dnorm(0, pow(10, -2))\nsig.beta ~ dnorm(0, pow(10, -2))\n\n\n##--- DERIVED VALUES ------------------------------------------------##\n\n# attenuation strength\nAS <- exp(sig.alpha + sig.beta * 0) / exp(sig.alpha + sig.beta * 100)\n\n# prediction means\nfor (i in 1:nPreds) {\n    P0m[i] <- mu.alpha + mu.beta * Wp[i]\n    P1m[i] <- alpha[1] + beta[1] * Wp[i]\n    P3m[i] <- alpha[3] + beta[3] * Wp[i]\n    P5m[i] <- alpha[5] + beta[5] * Wp[i]\n    P6m[i] <- alpha[6] + beta[6] * Wp[i]\n    P7m[i] <- alpha[7] + beta[7] * Wp[i]\n    P8m[i] <- alpha[8] + beta[8] * Wp[i]\n}\n\n# prediction intervals\nfor (i in 1:nPreds) {\n    P0i[i] ~ dnorm(mu.alpha + mu.beta * Wp[i], pow(exp(sig.alpha + sig.beta * Wp[i]), -2))\n    P1i[i] ~ dnorm(alpha[1] + beta[1] * Wp[i], pow(exp(sig.alpha + sig.beta * Wp[i]), -2))\n    P3i[i] ~ dnorm(alpha[3] + beta[3] * Wp[i], pow(exp(sig.alpha + sig.beta * Wp[i]), -2))\n    P5i[i] ~ dnorm(alpha[5] + beta[5] * Wp[i], pow(exp(sig.alpha + sig.beta * Wp[i]), -2))\n    P6i[i] ~ dnorm(alpha[6] + beta[6] * Wp[i], pow(exp(sig.alpha + sig.beta * Wp[i]), -2))\n    P7i[i] ~ dnorm(alpha[7] + beta[7] * Wp[i], pow(exp(sig.alpha + sig.beta * Wp[i]), -2))\n    P8i[i] ~ dnorm(alpha[8] + beta[8] * Wp[i], pow(exp(sig.alpha + sig.beta * Wp[i]), -2))\n}\n\n# sigma means\nfor (i in 1:nPreds) { S0m[i] <- exp(sig.alpha + sig.beta * Wp[i]) }\n\n}\", file = \"C:/Users/jbaldock/OneDrive - DOI/Documents/USGS/EcoDrought/EcoDrought Working/EcoDrought-Analysis/Qualitative/DroughtModel_REmain.txt\")\n```\n:::\n\n\n\n\n\n\n\n\nFit models in a loop:\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodlist_remain <- list()\nnpreds <- 101\nthresh <- c(50,45,40,35,30,25,20,15,10,5,2)\n\nfor (i in 1:11) {\n  names(joineddefdur)[57+i]\n  jags.data <- list(\"nObs\" = dim(joineddefdur)[1], \n                    \"D\" = unlist(joineddefdur[,57+i]), \n                    \"W\" = joineddefdur$tyz_sum_perc,\n                    \"nPreds\" = npreds, \"Wp\" = seq(from = 0, to = 100, length.out = npreds),\n                    \"basins\" = joineddefdur$basin_num, \"numBasins\" = c(1,3,5,6,7,8))\n  jags.params <- c(\"alpha\", \"beta\", \"mu.alpha\", \"sigma.alpha\", \"mu.beta\", \"sigma.beta\", \"sig.alpha\", \"sig.beta\", \"AS\", \"D\", \n                   \"P0m\", \"P1m\", \"P3m\", \"P5m\", \"P6m\", \"P7m\", \"P8m\", \n                   \"P0i\", \"P1i\", \"P3i\", \"P5i\", \"P6i\", \"P7i\", \"P8i\", \n                   \"S0m\", \"loglik\")\n  fit <- jags(data = jags.data, parameters.to.save = jags.params,\n              model.file = \"C:/Users/jbaldock/OneDrive - DOI/Documents/USGS/EcoDrought/EcoDrought Working/EcoDrought-Analysis/Qualitative/DroughtModel_REmain.txt\",\n              n.chains = 3, n.thin = 20, n.burnin = 2000, n.iter = 17000, DIC = FALSE)\n  modlist_remain[[i]] <- fit\n}\n```\n:::\n\n\n\n\n\n\n\n\n\n#### Compare thresholds\n\nGet attenuation strength (*sensu* Chezik et al. 2017) for each model (low flow threshold, %) and summarize as median and 95% credible interval\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nattenlist <- list()\nsigbetalist <- list()\nsigalphalist <- list()\n\nfor (i in 1:length(modlist_remain)) { \n  attenlist[[i]] <- modlist_remain[[i]]$BUGSoutput$sims.list$AS \n  sigbetalist[[i]] <- modlist_remain[[i]]$BUGSoutput$sims.list$sig.beta \n  sigalphalist[[i]] <- modlist_remain[[i]]$BUGSoutput$sims.list$sig.alpha \n}\n\nattentib <- tibble(threshold = rep(thresh, each = 2250), attenuation = unlist(attenlist))\nsigbetatib <- tibble(threshold = rep(thresh, each = 2250), sigbeta = unlist(sigbetalist))\nsigalphatib <- tibble(threshold = rep(thresh, each = 2250), sigalpha = unlist(sigalphalist))\n```\n:::\n\n\n\n\n\n\n\n\nPlot attenuation strength by low flow threshold\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nattentib %>% \n  group_by(threshold) %>% \n  summarize(median = quantile(attenuation, probs = 0.50),\n            cilow = quantile(attenuation, probs = 0.025),\n            ciupp = quantile(attenuation, probs = 0.975)) %>%\n  ungroup() %>%\n  ggplot() +\n  geom_abline(intercept = 1, slope = 0, linetype = \"dashed\", color = \"grey50\") +\n  geom_errorbar(aes(x = threshold, ymin = cilow, ymax = ciupp), width = 1) +\n  geom_point(aes(x = threshold, y = median)) +\n  theme_bw() + theme(panel.grid = element_blank()) + #ylim(0,12) +\n  xlab(\"Low flow threshold (%)\") + ylab(\"Attenuation strength\")\n```\n\n::: {.cell-output-display}\n![](ReferenceLowFlow_files/figure-html/unnamed-chunk-52-1.png){width=672}\n:::\n\n```{.r .cell-code}\nsigbetatib %>% \n  group_by(threshold) %>% \n  summarize(median = quantile(sigbeta, probs = 0.50),\n            cilow = quantile(sigbeta, probs = 0.025),\n            ciupp = quantile(sigbeta, probs = 0.975)) %>%\n  ungroup() %>%\n  ggplot() +\n  geom_abline(intercept = 0, slope = 0, linetype = \"dashed\", color = \"grey50\") +\n  geom_errorbar(aes(x = threshold, ymin = cilow, ymax = ciupp), width = 1) +\n  geom_point(aes(x = threshold, y = median)) +\n  theme_bw() + theme(panel.grid = element_blank()) + #ylim(-0.025,0.005) +\n  xlab(\"Low flow threshold (%)\") + ylab(\"sig.beta\")\n```\n\n::: {.cell-output-display}\n![](ReferenceLowFlow_files/figure-html/unnamed-chunk-52-2.png){width=672}\n:::\n\n```{.r .cell-code}\nsigalphatib %>% \n  group_by(threshold) %>% \n  summarize(median = quantile(sigalpha, probs = 0.50),\n            cilow = quantile(sigalpha, probs = 0.025),\n            ciupp = quantile(sigalpha, probs = 0.975)) %>%\n  ungroup() %>%\n  ggplot() +\n  geom_abline(intercept = 0, slope = 0, linetype = \"dashed\", color = \"grey50\") +\n  geom_errorbar(aes(x = threshold, ymin = cilow, ymax = ciupp), width = 1) +\n  geom_point(aes(x = threshold, y = median)) +\n  theme_bw() + theme(panel.grid = element_blank()) + #ylim(-0.025,0.005) +\n  xlab(\"Low flow threshold (%)\") + ylab(\"sig.alpha\")\n```\n\n::: {.cell-output-display}\n![](ReferenceLowFlow_files/figure-html/unnamed-chunk-52-3.png){width=672}\n:::\n:::\n\n\n\n\n\n\n\n\nSet top model based on strongest attenuation\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntop_mod <- modlist_remain[[8]]\nmodelout <- top_mod$BUGSoutput\nMcmcList <- vector(\"list\", length = dim(modelout$sims.array)[2])\nfor(i in 1:length(McmcList)) { McmcList[[i]] = as.mcmc(modelout$sims.array[,i,]) }\nMcmcdat <- rbind(McmcList[[1]], McmcList[[2]], McmcList[[3]])\n```\n:::\n\n\n\n\n\n\n\n\nTraceplots\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nMCMCtrace(top_mod, ind = TRUE, params = c(\"alpha\", \"beta\", \"mu.alpha\", \"mu.beta\", \"sig.alpha\", \"sig.beta\", \"AS\"), pdf = FALSE)\n```\n\n::: {.cell-output-display}\n![](ReferenceLowFlow_files/figure-html/unnamed-chunk-54-1.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](ReferenceLowFlow_files/figure-html/unnamed-chunk-54-2.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](ReferenceLowFlow_files/figure-html/unnamed-chunk-54-3.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](ReferenceLowFlow_files/figure-html/unnamed-chunk-54-4.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](ReferenceLowFlow_files/figure-html/unnamed-chunk-54-5.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](ReferenceLowFlow_files/figure-html/unnamed-chunk-54-6.png){width=672}\n:::\n:::\n\n\n\n\n\n\n\n\n#### Plot model output\n\nPlot data and global prediction interval\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# summarize lower and upper prediction intervales (attenuation)\nd_preds <- Mcmcdat[,grep(\"P0i\", colnames(Mcmcdat))]\npi_low <- apply(d_preds, 2, quantile, probs = c(0.025),  na.rm = TRUE)\npi_upp <- apply(d_preds, 2, quantile, probs = c(0.975),  na.rm = TRUE)\npi_med <- apply(Mcmcdat[,grep(\"P0m\", colnames(Mcmcdat))], 2, quantile, probs = c(0.5),  na.rm = TRUE)\n\n# plot\nggplot() +\n  geom_ribbon(aes(x = seq(from = 0, to = 100, by = 1), ymin = pi_low, ymax = pi_upp), alpha = 0.3) +\n  geom_line(aes(x = seq(from = 0, to = 100, by = 1), y = pi_med), size = 1, lineend = \"round\") +\n  geom_abline(intercept = 0, slope = 0, linetype = \"dashed\") +\n  geom_point(data = joineddefdur, aes(x = tyz_sum_perc, y = duration_15_fix_diff, fill = basin), \n             shape = 21, size = 2, position = position_jitter(seed = 1.3, width = 1)) +\n  scale_fill_manual(values = mycols) +\n  theme_bw() + theme(panel.grid = element_blank()) + #ylim(-60,60) +\n  xlab(\"Regional water availability (%)\") + ylab(\"Difference in low flow duration (days)\")\n```\n\n::: {.cell-output-display}\n![](ReferenceLowFlow_files/figure-html/unnamed-chunk-55-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n\n\nAlternatively, plot the global regression and credible interval\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# summarize lower and upper prediction intervales (attenuation)\npi_low <- apply(Mcmcdat[,grep(\"P0m\", colnames(Mcmcdat))], 2, quantile, probs = c(0.025),  na.rm = TRUE)\npi_upp <- apply(Mcmcdat[,grep(\"P0m\", colnames(Mcmcdat))], 2, quantile, probs = c(0.975),  na.rm = TRUE)\npi_med <- apply(Mcmcdat[,grep(\"P0m\", colnames(Mcmcdat))], 2, quantile, probs = c(0.5),  na.rm = TRUE)\n\n# plot\nggplot() +\n  geom_ribbon(aes(x = seq(from = 0, to = 100, by = 1), ymin = pi_low, ymax = pi_upp), alpha = 0.3) +\n  geom_line(aes(x = seq(from = 0, to = 100, by = 1), y = pi_med), size = 1, lineend = \"round\") +\n  geom_abline(intercept = 0, slope = 0, linetype = \"dashed\") +\n  geom_point(data = joineddefdur, aes(x = tyz_sum_perc, y = duration_15_fix_diff, fill = basin), \n             shape = 21, size = 2, position = position_jitter(seed = 1.3, width = 1)) +\n  scale_fill_manual(values = mycols) +\n  theme_bw() + theme(panel.grid = element_blank()) + #ylim(-60,60) +\n  xlab(\"Regional water availability (%)\") + ylab(\"Difference in low flow duration (days)\")\n```\n\n::: {.cell-output-display}\n![](ReferenceLowFlow_files/figure-html/unnamed-chunk-56-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n\n\nAlternatively, plot the basin-specific regressions and credible intervals\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# summarize lower and upper prediction intervales (attenuation)\npi_low1 <- apply(Mcmcdat[,grep(\"P1m\", colnames(Mcmcdat))], 2, quantile, probs = c(0.025),  na.rm = TRUE)\npi_upp1 <- apply(Mcmcdat[,grep(\"P1m\", colnames(Mcmcdat))], 2, quantile, probs = c(0.975),  na.rm = TRUE)\npi_med1 <- apply(Mcmcdat[,grep(\"P1m\", colnames(Mcmcdat))], 2, quantile, probs = c(0.5),  na.rm = TRUE)\n# summarize lower and upper prediction intervales (attenuation)\npi_low3 <- apply(Mcmcdat[,grep(\"P3m\", colnames(Mcmcdat))], 2, quantile, probs = c(0.025),  na.rm = TRUE)\npi_upp3 <- apply(Mcmcdat[,grep(\"P3m\", colnames(Mcmcdat))], 2, quantile, probs = c(0.975),  na.rm = TRUE)\npi_med3 <- apply(Mcmcdat[,grep(\"P3m\", colnames(Mcmcdat))], 2, quantile, probs = c(0.5),  na.rm = TRUE)\n# summarize lower and upper prediction intervales (attenuation)\npi_low5 <- apply(Mcmcdat[,grep(\"P5m\", colnames(Mcmcdat))], 2, quantile, probs = c(0.025),  na.rm = TRUE)\npi_upp5 <- apply(Mcmcdat[,grep(\"P5m\", colnames(Mcmcdat))], 2, quantile, probs = c(0.975),  na.rm = TRUE)\npi_med5 <- apply(Mcmcdat[,grep(\"P5m\", colnames(Mcmcdat))], 2, quantile, probs = c(0.5),  na.rm = TRUE)\n# summarize lower and upper prediction intervales (attenuation)\npi_low6 <- apply(Mcmcdat[,grep(\"P6m\", colnames(Mcmcdat))], 2, quantile, probs = c(0.025),  na.rm = TRUE)\npi_upp6 <- apply(Mcmcdat[,grep(\"P6m\", colnames(Mcmcdat))], 2, quantile, probs = c(0.975),  na.rm = TRUE)\npi_med6 <- apply(Mcmcdat[,grep(\"P6m\", colnames(Mcmcdat))], 2, quantile, probs = c(0.5),  na.rm = TRUE)\n# summarize lower and upper prediction intervales (attenuation)\npi_low7 <- apply(Mcmcdat[,grep(\"P7m\", colnames(Mcmcdat))], 2, quantile, probs = c(0.025),  na.rm = TRUE)\npi_upp7 <- apply(Mcmcdat[,grep(\"P7m\", colnames(Mcmcdat))], 2, quantile, probs = c(0.975),  na.rm = TRUE)\npi_med7 <- apply(Mcmcdat[,grep(\"P7m\", colnames(Mcmcdat))], 2, quantile, probs = c(0.5),  na.rm = TRUE)\n# summarize lower and upper prediction intervales (attenuation)\npi_low8 <- apply(Mcmcdat[,grep(\"P8m\", colnames(Mcmcdat))], 2, quantile, probs = c(0.025),  na.rm = TRUE)\npi_upp8 <- apply(Mcmcdat[,grep(\"P8m\", colnames(Mcmcdat))], 2, quantile, probs = c(0.975),  na.rm = TRUE)\npi_med8 <- apply(Mcmcdat[,grep(\"P8m\", colnames(Mcmcdat))], 2, quantile, probs = c(0.5),  na.rm = TRUE)\n\nggplot() +\n  geom_ribbon(aes(x = seq(from = 0, to = 100, by = 1), ymin = pi_low1, ymax = pi_upp1), alpha = 0.3, fill = mycols[1]) +\n  geom_ribbon(aes(x = seq(from = 0, to = 100, by = 1), ymin = pi_low3, ymax = pi_upp3), alpha = 0.3, fill = mycols[2]) +\n  geom_ribbon(aes(x = seq(from = 0, to = 100, by = 1), ymin = pi_low5, ymax = pi_upp5), alpha = 0.3, fill = mycols[3]) +\n  geom_ribbon(aes(x = seq(from = 0, to = 100, by = 1), ymin = pi_low6, ymax = pi_upp6), alpha = 0.3, fill = mycols[4]) +\n  geom_ribbon(aes(x = seq(from = 0, to = 100, by = 1), ymin = pi_low7, ymax = pi_upp7), alpha = 0.3, fill = mycols[5]) +\n  geom_ribbon(aes(x = seq(from = 0, to = 100, by = 1), ymin = pi_low8, ymax = pi_upp8), alpha = 0.3, fill = mycols[6]) +\n  geom_line(aes(x = seq(from = 0, to = 100, by = 1), y = pi_med1), color = mycols[1], size = 1.3, lineend = \"round\") +\n  geom_line(aes(x = seq(from = 0, to = 100, by = 1), y = pi_med3), color = mycols[2], size = 1.3, lineend = \"round\") +\n  geom_line(aes(x = seq(from = 0, to = 100, by = 1), y = pi_med5), color = mycols[3], size = 1.3, lineend = \"round\") +\n  geom_line(aes(x = seq(from = 0, to = 100, by = 1), y = pi_med6), color = mycols[4], size = 1.3, lineend = \"round\") +\n  geom_line(aes(x = seq(from = 0, to = 100, by = 1), y = pi_med7), color = mycols[5], size = 1.3, lineend = \"round\") +\n  geom_line(aes(x = seq(from = 0, to = 100, by = 1), y = pi_med8), color = mycols[6], size = 1.3, lineend = \"round\") +\n  # geom_smooth(aes(x = seq(from = 0, to = 100, by = 1), y = pi_low), color = \"black\", size = 1.5) +\n  # geom_smooth(aes(x = seq(from = 0, to = 100, by = 1), y = pi_upp), color = \"black\", size = 1.5) +\n  geom_abline(intercept = 0, slope = 0, linetype = \"dashed\") +\n  geom_point(data = joineddefdur, aes(x = tyz_sum_perc, y = duration_20_fix_diff, fill = basin), \n             shape = 21, size = 2, position = position_jitter(seed = 1, width = 1)) +\n  scale_fill_manual(values = mycols) +\n  theme_bw() + theme(panel.grid = element_blank()) + #ylim(-60,60) +\n  xlab(\"Regional water availability (%)\") + ylab(\"Difference in low flow duration (days)\")\n```\n\n::: {.cell-output-display}\n![](ReferenceLowFlow_files/figure-html/unnamed-chunk-57-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n\n\n\nPlot data and basin-specific prediction interval\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# summarize lower and upper prediction intervales (attenuation)\nd_preds <- Mcmcdat[,grep(\"P1i\", colnames(Mcmcdat))]\npi_low1 <- apply(d_preds, 2, quantile, probs = c(0.025),  na.rm = TRUE)\npi_upp1 <- apply(d_preds, 2, quantile, probs = c(0.975),  na.rm = TRUE)\npi_med1 <- apply(Mcmcdat[,grep(\"P1m\", colnames(Mcmcdat))], 2, quantile, probs = c(0.5),  na.rm = TRUE)\n# summarize lower and upper prediction intervales (attenuation)\nd_preds <- Mcmcdat[,grep(\"P3i\", colnames(Mcmcdat))]\npi_low3 <- apply(d_preds, 2, quantile, probs = c(0.025),  na.rm = TRUE)\npi_upp3 <- apply(d_preds, 2, quantile, probs = c(0.975),  na.rm = TRUE)\npi_med3 <- apply(Mcmcdat[,grep(\"P3m\", colnames(Mcmcdat))], 2, quantile, probs = c(0.5),  na.rm = TRUE)\n# summarize lower and upper prediction intervales (attenuation)\nd_preds <- Mcmcdat[,grep(\"P5i\", colnames(Mcmcdat))]\npi_low5 <- apply(d_preds, 2, quantile, probs = c(0.025),  na.rm = TRUE)\npi_upp5 <- apply(d_preds, 2, quantile, probs = c(0.975),  na.rm = TRUE)\npi_med5 <- apply(Mcmcdat[,grep(\"P5m\", colnames(Mcmcdat))], 2, quantile, probs = c(0.5),  na.rm = TRUE)\n# summarize lower and upper prediction intervales (attenuation)\nd_preds <- Mcmcdat[,grep(\"P6i\", colnames(Mcmcdat))]\npi_low6 <- apply(d_preds, 2, quantile, probs = c(0.025),  na.rm = TRUE)\npi_upp6 <- apply(d_preds, 2, quantile, probs = c(0.975),  na.rm = TRUE)\npi_med6 <- apply(Mcmcdat[,grep(\"P6m\", colnames(Mcmcdat))], 2, quantile, probs = c(0.5),  na.rm = TRUE)\n# summarize lower and upper prediction intervales (attenuation)\nd_preds <- Mcmcdat[,grep(\"P7i\", colnames(Mcmcdat))]\npi_low7 <- apply(d_preds, 2, quantile, probs = c(0.025),  na.rm = TRUE)\npi_upp7 <- apply(d_preds, 2, quantile, probs = c(0.975),  na.rm = TRUE)\npi_med7 <- apply(Mcmcdat[,grep(\"P7m\", colnames(Mcmcdat))], 2, quantile, probs = c(0.5),  na.rm = TRUE)\n# summarize lower and upper prediction intervales (attenuation)\nd_preds <- Mcmcdat[,grep(\"P8i\", colnames(Mcmcdat))]\npi_low8 <- apply(d_preds, 2, quantile, probs = c(0.025),  na.rm = TRUE)\npi_upp8 <- apply(d_preds, 2, quantile, probs = c(0.975),  na.rm = TRUE)\npi_med8 <- apply(Mcmcdat[,grep(\"P8m\", colnames(Mcmcdat))], 2, quantile, probs = c(0.5),  na.rm = TRUE)\n```\n:::\n\n\n\n\n\n\n\n\n::: panel-tabset\n\n##### Combined\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot() +\n  geom_ribbon(aes(x = seq(from = 0, to = 100, by = 1), ymin = pi_low1, ymax = pi_upp1), alpha = 0.3, fill = mycols[1]) +\n  geom_ribbon(aes(x = seq(from = 0, to = 100, by = 1), ymin = pi_low3, ymax = pi_upp3), alpha = 0.3, fill = mycols[2]) +\n  geom_ribbon(aes(x = seq(from = 0, to = 100, by = 1), ymin = pi_low5, ymax = pi_upp5), alpha = 0.3, fill = mycols[3]) +\n  geom_ribbon(aes(x = seq(from = 0, to = 100, by = 1), ymin = pi_low6, ymax = pi_upp6), alpha = 0.3, fill = mycols[4]) +\n  geom_ribbon(aes(x = seq(from = 0, to = 100, by = 1), ymin = pi_low7, ymax = pi_upp7), alpha = 0.3, fill = mycols[5]) +\n  geom_ribbon(aes(x = seq(from = 0, to = 100, by = 1), ymin = pi_low8, ymax = pi_upp8), alpha = 0.3, fill = mycols[6]) +\n  geom_line(aes(x = seq(from = 0, to = 100, by = 1), y = pi_med1), color = mycols[1], size = 1.3) +\n  geom_line(aes(x = seq(from = 0, to = 100, by = 1), y = pi_med3), color = mycols[2], size = 1.3) +\n  geom_line(aes(x = seq(from = 0, to = 100, by = 1), y = pi_med5), color = mycols[3], size = 1.3) +\n  geom_line(aes(x = seq(from = 0, to = 100, by = 1), y = pi_med6), color = mycols[4], size = 1.3) +\n  geom_line(aes(x = seq(from = 0, to = 100, by = 1), y = pi_med7), color = mycols[5], size = 1.3) +\n  geom_line(aes(x = seq(from = 0, to = 100, by = 1), y = pi_med8), color = mycols[6], size = 1.3) +\n  # geom_smooth(aes(x = seq(from = 0, to = 100, by = 1), y = pi_low), color = \"black\", size = 1.5) +\n  # geom_smooth(aes(x = seq(from = 0, to = 100, by = 1), y = pi_upp), color = \"black\", size = 1.5) +\n  geom_abline(intercept = 0, slope = 0, linetype = \"dashed\") +\n  geom_point(data = joineddefdur, aes(x = tyz_sum_perc, y = duration_20_fix_diff, fill = basin), \n             shape = 21, size = 2, position = position_jitter(seed = 1, width = 1)) +\n  scale_fill_manual(values = mycols) +\n  theme_bw() + theme(panel.grid = element_blank()) + #ylim(-60,60) +\n  xlab(\"Regional water availability (%)\") + ylab(\"Difference in low flow duration (days)\")\n```\n\n::: {.cell-output-display}\n![](ReferenceLowFlow_files/figure-html/unnamed-chunk-59-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n\n\n##### West Brook\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot() +\n  geom_ribbon(aes(x = seq(from = 0, to = 100, by = 1), ymin = pi_low1, ymax = pi_upp1), alpha = 0.3, fill = mycols[1]) +\n  geom_line(aes(x = seq(from = 0, to = 100, by = 1), y = pi_med1), color = mycols[1], size = 1.3) +\n  geom_abline(intercept = 0, slope = 0, linetype = \"dashed\") +\n  geom_point(data = joineddefdur %>% filter(basin_num == 1), aes(x = tyz_sum_perc, y = duration_15_fix_diff), \n             shape = 21, size = 2, position = position_jitter(seed = 1, width = 1), fill = mycols[1]) +\n  theme_bw() + theme(panel.grid = element_blank()) + #ylim(-60,60) +\n  xlab(\"Regional water availability (%)\") + ylab(\"Difference in low flow duration (days)\") + ggtitle(\"West Brook\")\n```\n\n::: {.cell-output-display}\n![](ReferenceLowFlow_files/figure-html/unnamed-chunk-60-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n\n\n##### Staunton\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot() +\n  geom_ribbon(aes(x = seq(from = 0, to = 100, by = 1), ymin = pi_low3, ymax = pi_upp3), alpha = 0.3, fill = mycols[2]) +\n  geom_line(aes(x = seq(from = 0, to = 100, by = 1), y = pi_med3), color = mycols[2], size = 1.3) +\n  geom_abline(intercept = 0, slope = 0, linetype = \"dashed\") +\n  geom_point(data = joineddefdur %>% filter(basin_num == 3), aes(x = tyz_sum_perc, y = duration_15_fix_diff), \n             shape = 21, size = 2, position = position_jitter(seed = 1, width = 1), fill = mycols[2]) +\n  theme_bw() + theme(panel.grid = element_blank()) + #ylim(-60,60) +\n  xlab(\"Regional water availability (%)\") + ylab(\"Difference in low flow duration (days)\") + ggtitle(\"Staunton\")\n```\n\n::: {.cell-output-display}\n![](ReferenceLowFlow_files/figure-html/unnamed-chunk-61-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n\n\n##### Flathead\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot() +\n  geom_ribbon(aes(x = seq(from = 0, to = 100, by = 1), ymin = pi_low5, ymax = pi_upp5), alpha = 0.3, fill = mycols[3]) +\n  geom_line(aes(x = seq(from = 0, to = 100, by = 1), y = pi_med5), color = mycols[3], size = 1.3) +\n  geom_abline(intercept = 0, slope = 0, linetype = \"dashed\") +\n  geom_point(data = joineddefdur %>% filter(basin_num == 5), aes(x = tyz_sum_perc, y = duration_15_fix_diff), \n             shape = 21, size = 2, position = position_jitter(seed = 1, width = 1), fill = mycols[3]) +\n  theme_bw() + theme(panel.grid = element_blank()) + #ylim(-60,60) +\n  xlab(\"Regional water availability (%)\") + ylab(\"Difference in low flow duration (days)\") + ggtitle(\"Flathead\")\n```\n\n::: {.cell-output-display}\n![](ReferenceLowFlow_files/figure-html/unnamed-chunk-62-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n\n\n##### Yellowstone\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot() +\n  geom_ribbon(aes(x = seq(from = 0, to = 100, by = 1), ymin = pi_low6, ymax = pi_upp6), alpha = 0.3, fill = mycols[4]) +\n  geom_line(aes(x = seq(from = 0, to = 100, by = 1), y = pi_med6), color = mycols[4], size = 1.3) +\n  geom_abline(intercept = 0, slope = 0, linetype = \"dashed\") +\n  geom_point(data = joineddefdur %>% filter(basin_num == 6), aes(x = tyz_sum_perc, y = duration_15_fix_diff), \n             shape = 21, size = 2, position = position_jitter(seed = 1, width = 1), fill = mycols[4]) +\n  theme_bw() + theme(panel.grid = element_blank()) + #ylim(-60,60) +\n  xlab(\"Regional water availability (%)\") + ylab(\"Difference in low flow duration (days)\") + ggtitle(\"Yellowstone\")\n```\n\n::: {.cell-output-display}\n![](ReferenceLowFlow_files/figure-html/unnamed-chunk-63-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n\n\n##### Snake\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot() +\n  geom_ribbon(aes(x = seq(from = 0, to = 100, by = 1), ymin = pi_low7, ymax = pi_upp7), alpha = 0.3, fill = mycols[5]) +\n  geom_line(aes(x = seq(from = 0, to = 100, by = 1), y = pi_med7), color = mycols[5], size = 1.3) +\n  geom_abline(intercept = 0, slope = 0, linetype = \"dashed\") +\n  geom_point(data = joineddefdur %>% filter(basin_num == 7), aes(x = tyz_sum_perc, y = duration_15_fix_diff), \n             shape = 21, size = 2, position = position_jitter(seed = 1, width = 1), fill = mycols[5]) +\n  theme_bw() + theme(panel.grid = element_blank()) + #ylim(-60,60) +\n  xlab(\"Regional water availability (%)\") + ylab(\"Difference in low flow duration (days)\") + ggtitle(\"Snake\")\n```\n\n::: {.cell-output-display}\n![](ReferenceLowFlow_files/figure-html/unnamed-chunk-64-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n\n\n##### Donner-Blitzen\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot() +\n  geom_ribbon(aes(x = seq(from = 0, to = 100, by = 1), ymin = pi_low8, ymax = pi_upp8), alpha = 0.3, fill = mycols[6]) +\n  geom_line(aes(x = seq(from = 0, to = 100, by = 1), y = pi_med8), color = mycols[6], size = 1.3) +\n  geom_abline(intercept = 0, slope = 0, linetype = \"dashed\") +\n  geom_point(data = joineddefdur %>% filter(basin_num == 8), aes(x = tyz_sum_perc, y = duration_15_fix_diff), \n             shape = 21, size = 2, position = position_jitter(seed = 1, width = 1), fill = mycols[6]) +\n  theme_bw() + theme(panel.grid = element_blank()) + #ylim(-60,60) +\n  xlab(\"Regional water availability (%)\") + ylab(\"Difference in low flow duration (days)\") + ggtitle(\"Snake\")\n```\n\n::: {.cell-output-display}\n![](ReferenceLowFlow_files/figure-html/unnamed-chunk-65-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n\n\n:::\n\n\nPlot effect of water availability on sigma\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# summarize lower and upper prediction intervales (attenuation)\nd_preds <- Mcmcdat[,grep(\"S0m\", colnames(Mcmcdat))]\npi_low <- apply(d_preds, 2, quantile, probs = c(0.025),  na.rm = TRUE)\npi_upp <- apply(d_preds, 2, quantile, probs = c(0.975),  na.rm = TRUE)\npi_med <- apply(d_preds, 2, quantile, probs = c(0.500),  na.rm = TRUE)\n\n# plot\nggplot() +\n  geom_ribbon(aes(x = seq(from = 0, to = 100, by = 1), ymin = pi_low, ymax = pi_upp), alpha = 0.3) +\n  geom_line(aes(x = seq(from = 0, to = 100, by = 1), y = pi_med), size = 1, lineend = \"round\") +\n  scale_fill_manual(values = mycols) +\n  theme_bw() + theme(panel.grid = element_blank()) + ylim(0,max(pi_upp)) +\n  xlab(\"Regional water availability (%)\") + ylab(\"Model standard deviation\")\n```\n\n::: {.cell-output-display}\n![](ReferenceLowFlow_files/figure-html/unnamed-chunk-66-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n\n\n#### Paper figure\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# site-level drought threshold\nbas <- \"West Brook\"\nmonths <- c(7:9)\nbigG <- \"South River Conway NWIS\"\n\ndd_wet <- dat_clean_sub %>% filter(basin == bas, month %in% months, WaterYear == 2021) %>% mutate(site_name = factor(site_name, levels = rev(c(bigG, wborder))))\ndd_dry <- dat_clean_sub %>% filter(basin == bas, month %in% months, WaterYear == 2020) %>% mutate(site_name = factor(site_name, levels = rev(c(bigG, wborder))))\n\nmysites <- unlist(unique(dd_wet$site_name))\n# dd <- dd %>% filter(site_name %in% mysites)\n\n# DROUGHT HYDROGRAPHS\nhydroplot_dry <- ggplot() +\n  geom_line(data = dd_dry, aes(x = date, y = logYield, group = site_name), color = \"grey50\") +\n  geom_point(data = dd_dry, aes(x = date, y = logYield, group = site_name, color = drought_fix), size = 0.75) +\n  geom_line(data = dd_dry %>% filter(site_name == \"South River Conway NWIS\"), \n            aes(x = date, y = logYield, group = site_name), color = \"black\") +\n  geom_point(data = dd_dry %>% filter(site_name == \"South River Conway NWIS\"), \n             aes(x = date, y = logYield, group = site_name, fill = drought_fix), shape = 21, size = 1.5) +\n  scale_color_viridis(option = \"A\", direction = -1, discrete = TRUE, limits = mydroughtlevels) +\n  scale_fill_viridis(option = \"A\", direction = -1, discrete = TRUE, limits = mydroughtlevels) +\n  xlab(\"Date\") + ylab(expression(paste(\"log(Specific discharge, mm day\"^-1,\")\", sep = \"\"))) +\n  theme_bw() + theme(panel.grid = element_blank(), axis.text = element_text(color = \"black\"), \n                     legend.position = \"none\", panel.background = element_rect(fill = 'grey80')) +\n  ylim(min(dd_dry$logYield), max(dd_wet$logYield))\n\nhydroplot_wet <- ggplot() +\n  geom_line(data = dd_wet, aes(x = date, y = logYield, group = site_name), color = \"grey50\") +\n  geom_point(data = dd_wet, aes(x = date, y = logYield, group = site_name, color = drought_fix), size = 0.75) +\n  geom_line(data = dd_wet %>% filter(site_name == \"South River Conway NWIS\"), \n            aes(x = date, y = logYield, group = site_name), color = \"black\") +\n  geom_point(data = dd_wet %>% filter(site_name == \"South River Conway NWIS\"), \n             aes(x = date, y = logYield, group = site_name, fill = drought_fix), shape = 21, size = 1.5) +\n  scale_color_viridis(option = \"A\", direction = -1, discrete = TRUE, limits = mydroughtlevels) +\n  scale_fill_viridis(option = \"A\", direction = -1, discrete = TRUE, limits = mydroughtlevels) +\n  xlab(\"Date\") + ylab(expression(paste(\"log(Specific discharge, mm day\"^-1,\")\", sep = \"\"))) +\n  theme_bw() + theme(panel.grid = element_blank(), axis.text = element_text(color = \"black\"), \n                     legend.position = \"none\", panel.background = element_rect(fill = 'grey80')) +\n  ylim(min(dd_dry$logYield), max(dd_wet$logYield))\n\n# HEAT MAPS\nheat1 <- dd_dry %>%\n  ggplot() +\n  geom_tile(aes(x = date, y = site_name, fill = drought_fix)) +\n  scale_fill_viridis(option = \"A\", direction = -1, discrete = TRUE, limits = mydroughtlevels) +\n  xlab(\"Date\") + ylab(\"Site\") +\n  theme_bw() + theme(axis.title.y = element_blank(), panel.background = element_rect(fill = 'grey90'),\n                     panel.grid.major = element_blank(), panel.grid.minor = element_blank(), \n                     axis.text = element_text(color = \"black\"), legend.position = \"none\") +\n  geom_line(data = data.frame(x = c(min(dd_dry$date)-days(10), max(dd_dry$date)+days(10)), \n                              y = rep(2:length(mysites), each = 2)-0.5), \n            aes(x = x, y = y, group = y), color = \"grey70\") +\n  coord_cartesian(xlim = c(min(dd_dry$date), max(dd_dry$date))) +\n  scale_y_discrete(expand = c(0,0), labels = rev(c(\"Ref.\", 1:8))) + \n  scale_x_date(expand = c(0,0), breaks = as.Date(c(\"2020-07-01\", \"2020-08-01\", \"2020-09-01\", \"2020-09-30\")), \n               labels = c(\"Jul\", \"Aug\", \"Sep\", \"Oct\")) +\n  guides(fill = guide_legend(title = \"Drought\\nthreshold (%)\"))\n\nheat2 <- dd_wet %>%\n  ggplot() +\n  geom_tile(aes(x = date, y = site_name, fill = drought_fix)) +\n  scale_fill_viridis(option = \"A\", direction = -1, discrete = TRUE, limits = mydroughtlevels) +\n  xlab(\"Date\") + ylab(\"Site\") +\n  theme_bw() + theme(axis.title.y = element_blank(), panel.background = element_rect(fill = 'grey90'),\n                     panel.grid.major = element_blank(), panel.grid.minor = element_blank(),\n                     axis.text = element_text(color = \"black\"), legend.position = \"none\") +\n  geom_line(data = data.frame(x = c(min(dd_wet$date)-days(10), max(dd_wet$date)+days(10)), \n                              y = rep(2:length(mysites), each = 2)-0.5), \n            aes(x = x, y = y, group = y), color = \"grey70\") +\n  coord_cartesian(xlim = c(min(dd_wet$date), max(dd_wet$date))) +\n  scale_y_discrete(expand = c(0,0), labels = rev(c(\"Ref.\", 1:8))) + \n  scale_x_date(expand = c(0,0), breaks = as.Date(c(\"2021-07-01\", \"2021-08-01\", \"2021-09-01\", \"2021-09-30\")), \n               labels = c(\"Jul\", \"Aug\", \"Sep\", \"Oct\")) +\n  guides(fill = guide_legend(title = \"Drought\\nthreshold (%)\"))\n\n\n# Data plot\n# summarize lower and upper prediction intervales (attenuation)\npi_low0 <- apply(Mcmcdat[,grep(\"P0m\", colnames(Mcmcdat))], 2, quantile, probs = c(0.025),  na.rm = TRUE)\npi_upp0 <- apply(Mcmcdat[,grep(\"P0m\", colnames(Mcmcdat))], 2, quantile, probs = c(0.975),  na.rm = TRUE)\npi_med0 <- apply(Mcmcdat[,grep(\"P0m\", colnames(Mcmcdat))], 2, quantile, probs = c(0.5),  na.rm = TRUE)\n# summarize lower and upper prediction intervales (attenuation)\npi_low1 <- apply(Mcmcdat[,grep(\"P1m\", colnames(Mcmcdat))], 2, quantile, probs = c(0.025),  na.rm = TRUE)\npi_upp1 <- apply(Mcmcdat[,grep(\"P1m\", colnames(Mcmcdat))], 2, quantile, probs = c(0.975),  na.rm = TRUE)\npi_med1 <- apply(Mcmcdat[,grep(\"P1m\", colnames(Mcmcdat))], 2, quantile, probs = c(0.5),  na.rm = TRUE)\n# summarize lower and upper prediction intervales (attenuation)\npi_low3 <- apply(Mcmcdat[,grep(\"P3m\", colnames(Mcmcdat))], 2, quantile, probs = c(0.025),  na.rm = TRUE)\npi_upp3 <- apply(Mcmcdat[,grep(\"P3m\", colnames(Mcmcdat))], 2, quantile, probs = c(0.975),  na.rm = TRUE)\npi_med3 <- apply(Mcmcdat[,grep(\"P3m\", colnames(Mcmcdat))], 2, quantile, probs = c(0.5),  na.rm = TRUE)\n# summarize lower and upper prediction intervales (attenuation)\npi_low5 <- apply(Mcmcdat[,grep(\"P5m\", colnames(Mcmcdat))], 2, quantile, probs = c(0.025),  na.rm = TRUE)\npi_upp5 <- apply(Mcmcdat[,grep(\"P5m\", colnames(Mcmcdat))], 2, quantile, probs = c(0.975),  na.rm = TRUE)\npi_med5 <- apply(Mcmcdat[,grep(\"P5m\", colnames(Mcmcdat))], 2, quantile, probs = c(0.5),  na.rm = TRUE)\n# summarize lower and upper prediction intervales (attenuation)\npi_low6 <- apply(Mcmcdat[,grep(\"P6m\", colnames(Mcmcdat))], 2, quantile, probs = c(0.025),  na.rm = TRUE)\npi_upp6 <- apply(Mcmcdat[,grep(\"P6m\", colnames(Mcmcdat))], 2, quantile, probs = c(0.975),  na.rm = TRUE)\npi_med6 <- apply(Mcmcdat[,grep(\"P6m\", colnames(Mcmcdat))], 2, quantile, probs = c(0.5),  na.rm = TRUE)\n# summarize lower and upper prediction intervales (attenuation)\npi_low7 <- apply(Mcmcdat[,grep(\"P7m\", colnames(Mcmcdat))], 2, quantile, probs = c(0.025),  na.rm = TRUE)\npi_upp7 <- apply(Mcmcdat[,grep(\"P7m\", colnames(Mcmcdat))], 2, quantile, probs = c(0.975),  na.rm = TRUE)\npi_med7 <- apply(Mcmcdat[,grep(\"P7m\", colnames(Mcmcdat))], 2, quantile, probs = c(0.5),  na.rm = TRUE)\n# summarize lower and upper prediction intervales (attenuation)\npi_low8 <- apply(Mcmcdat[,grep(\"P8m\", colnames(Mcmcdat))], 2, quantile, probs = c(0.025),  na.rm = TRUE)\npi_upp8 <- apply(Mcmcdat[,grep(\"P8m\", colnames(Mcmcdat))], 2, quantile, probs = c(0.975),  na.rm = TRUE)\npi_med8 <- apply(Mcmcdat[,grep(\"P8m\", colnames(Mcmcdat))], 2, quantile, probs = c(0.5),  na.rm = TRUE)\n\nscatter_basinwithcis <- ggplot() +\n  geom_ribbon(aes(x = seq(from = 0, to = 100, by = 1), ymin = pi_low1, ymax = pi_upp1), alpha = 0.3, fill = mycols[1]) +\n  geom_ribbon(aes(x = seq(from = 0, to = 100, by = 1), ymin = pi_low3, ymax = pi_upp3), alpha = 0.3, fill = mycols[2]) +\n  geom_ribbon(aes(x = seq(from = 0, to = 100, by = 1), ymin = pi_low5, ymax = pi_upp5), alpha = 0.3, fill = mycols[3]) +\n  geom_ribbon(aes(x = seq(from = 0, to = 100, by = 1), ymin = pi_low6, ymax = pi_upp6), alpha = 0.3, fill = mycols[4]) +\n  geom_ribbon(aes(x = seq(from = 0, to = 100, by = 1), ymin = pi_low7, ymax = pi_upp7), alpha = 0.3, fill = mycols[5]) +\n  geom_ribbon(aes(x = seq(from = 0, to = 100, by = 1), ymin = pi_low8, ymax = pi_upp8), alpha = 0.3, fill = mycols[6]) +\n  geom_line(aes(x = seq(from = 0, to = 100, by = 1), y = pi_med1), color = mycols[1], size = 1.3, lineend = \"round\") +\n  geom_line(aes(x = seq(from = 0, to = 100, by = 1), y = pi_med3), color = mycols[2], size = 1.3, lineend = \"round\") +\n  geom_line(aes(x = seq(from = 0, to = 100, by = 1), y = pi_med5), color = mycols[3], size = 1.3, lineend = \"round\") +\n  geom_line(aes(x = seq(from = 0, to = 100, by = 1), y = pi_med6), color = mycols[4], size = 1.3, lineend = \"round\") +\n  geom_line(aes(x = seq(from = 0, to = 100, by = 1), y = pi_med7), color = mycols[5], size = 1.3, lineend = \"round\") +\n  geom_line(aes(x = seq(from = 0, to = 100, by = 1), y = pi_med8), color = mycols[6], size = 1.3, lineend = \"round\") +\n  geom_abline(intercept = 0, slope = 0, linetype = \"dashed\") +\n  geom_point(data = joineddefdur, aes(x = tyz_sum_perc, y = duration_20_fix_diff, fill = basin), \n             shape = 21, size = 2, position = position_jitter(seed = 1, width = 1)) +\n  scale_fill_manual(values = mycols) +\n  theme_bw() + theme(panel.grid = element_blank(), legend.position = \"none\", axis.text = element_text(color = \"black\")) + #ylim(-60,60) +\n  xlab(\"Water availability (percentile)\") + ylab(\"Difference in low flow duration (days)\")\n\nscatter_basinnocis <- ggplot() +\n  geom_line(aes(x = seq(from = 0, to = 100, by = 1), y = pi_med1), color = mycols[1], size = 1.3, lineend = \"round\") +\n  geom_line(aes(x = seq(from = 0, to = 100, by = 1), y = pi_med3), color = mycols[2], size = 1.3, lineend = \"round\") +\n  geom_line(aes(x = seq(from = 0, to = 100, by = 1), y = pi_med5), color = mycols[3], size = 1.3, lineend = \"round\") +\n  geom_line(aes(x = seq(from = 0, to = 100, by = 1), y = pi_med6), color = mycols[4], size = 1.3, lineend = \"round\") +\n  geom_line(aes(x = seq(from = 0, to = 100, by = 1), y = pi_med7), color = mycols[5], size = 1.3, lineend = \"round\") +\n  geom_line(aes(x = seq(from = 0, to = 100, by = 1), y = pi_med8), color = mycols[6], size = 1.3, lineend = \"round\") +\n  geom_abline(intercept = 0, slope = 0, linetype = \"dashed\") +\n  geom_point(data = joineddefdur, aes(x = tyz_sum_perc, y = duration_20_fix_diff, fill = basin), \n             shape = 21, size = 2, position = position_jitter(seed = 1, width = 1)) +\n  scale_fill_manual(values = mycols) +\n  theme_bw() + theme(panel.grid = element_blank(), legend.position = \"none\", axis.text = element_text(color = \"black\")) + #ylim(-60,60) +\n  xlab(\"Water availability (percentile)\") + ylab(\"Difference in low flow duration (days)\")\n\nscatter_global <- ggplot() +\n  geom_ribbon(aes(x = seq(from = 0, to = 100, by = 1), ymin = pi_low0, ymax = pi_upp0), alpha = 0.3) +\n  geom_line(aes(x = seq(from = 0, to = 100, by = 1), y = pi_med0), color = \"black\", size = 1.3, lineend = \"round\") +\n  geom_abline(intercept = 0, slope = 0, linetype = \"dashed\") +\n  geom_point(data = joineddefdur, aes(x = tyz_sum_perc, y = duration_20_fix_diff, fill = basin), \n             shape = 21, size = 2, position = position_jitter(seed = 1, width = 1)) +\n  scale_fill_manual(values = mycols) +\n  theme_bw() + theme(panel.grid = element_blank(), legend.position = \"none\", axis.text = element_text(color = \"black\")) + #ylim(-60,60) +\n  xlab(\"Water availability (percentile)\") + ylab(\"Difference in low flow duration (days)\")\n    \n    \n\n# Sigma\nd_preds <- Mcmcdat[,grep(\"S0m\", colnames(Mcmcdat))]\npi_low <- apply(d_preds, 2, quantile, probs = c(0.025),  na.rm = TRUE)\npi_upp <- apply(d_preds, 2, quantile, probs = c(0.975),  na.rm = TRUE)\npi_med <- apply(d_preds, 2, quantile, probs = c(0.500),  na.rm = TRUE)\nsigmaplot <- ggplot() +\n  geom_ribbon(aes(x = seq(from = 0, to = 100, by = 1), ymin = pi_low, ymax = pi_upp), alpha = 0.3) +\n  geom_line(aes(x = seq(from = 0, to = 100, by = 1), y = pi_med), size = 1, lineend = \"round\") +\n  scale_fill_manual(values = mycols) +\n  theme_bw() + theme(panel.grid = element_blank(), axis.text = element_text(color = \"black\")) + ylim(0,max(pi_upp)) +\n  xlab(\"Water availability (percentile)\") + ylab(expression(paste(\"Model standard deviation (\", sigma, \")\")))\n\n\n# Attenuation strength\nattentib_sum <- attentib %>% \n  group_by(threshold) %>% \n  summarize(median = quantile(attenuation, probs = 0.50),\n            cilow = quantile(attenuation, probs = 0.025),\n            ciupp = quantile(attenuation, probs = 0.975)) %>%\n  ungroup()\neffectplot <- attentib_sum %>%\n  ggplot() +\n  geom_abline(intercept = 1, slope = 0, linetype = \"dashed\", color = \"grey50\") +\n  geom_errorbar(aes(x = threshold, ymin = cilow, ymax = ciupp), width = 1) +\n  geom_point(aes(x = threshold, y = median), shape = 21, fill = \"white\", size = 2) +\n  geom_point(data = attentib_sum %>% filter(threshold == 15), aes(x = threshold, y = median), size = 2) +\n  theme_bw() + theme(panel.grid = element_blank(), axis.text = element_text(color = \"black\")) + ylim(0,12) +\n  xlab(\"Critical flow threshold (percentile)\") + ylab(\"Attenuation strength\")\n\n\negg::ggarrange(heat1, heat2, ggplot() + theme_void(), \n               scatter_basinnocis, sigmaplot, effectplot, nrow = 2, ncol = 3)\n```\n\n::: {.cell-output-display}\n![](ReferenceLowFlow_files/figure-html/unnamed-chunk-67-1.png){width=576}\n:::\n\n```{.r .cell-code}\n# jpeg(\"C:/Users/jbaldock/OneDrive - DOI/Documents/USGS/EcoDrought/EcoDrought Working/Presentation figs/DroughtDuration_sitelevel_WestBrook_2020-2021_updateGlobal.jpg\", width = 6.5, height = 9, units = \"in\", res = 1000)\n# egg::ggarrange(heat1, scatter_global, heat2, sigmaplot, ggplot() + theme_void(), effectplot, nrow = 3, ncol = 2)\n# dev.off()\n# \n# jpeg(\"C:/Users/jbaldock/OneDrive - DOI/Documents/USGS/EcoDrought/EcoDrought Working/Presentation figs/DroughtDuration_sitelevel_WestBrook_2020-2021_updatebasin.jpg\", width = 6.5, height = 9, units = \"in\", res = 1000)\n# egg::ggarrange(heat1, scatter_basinwithcis, heat2, sigmaplot, ggplot() + theme_void(), effectplot, nrow = 3, ncol = 2)\n# dev.off()\n# \n# jpeg(\"C:/Users/jbaldock/OneDrive - DOI/Documents/USGS/EcoDrought/EcoDrought Working/Presentation figs/DroughtDuration_sitelevel_WestBrook_2020-2021_updatebasinnoci_wide.jpg\", width = 8.75, height = 5.5, units = \"in\", res = 1000)\n# egg::ggarrange(heat1, heat2, ggplot() + theme_void(), \n#                scatter_basinnocis, sigmaplot, effectplot, nrow = 2, ncol = 3)\n# dev.off()\n# \n# jpeg(\"C:/Users/jbaldock/OneDrive - DOI/Documents/USGS/EcoDrought/EcoDrought Working/Presentation figs/DroughtDuration_sitelevel_WestBrook_2020-2021_updatebasinnoci_wide_withHydro.jpg\", width = 8.75, height = 5.5, units = \"in\", res = 1000)\n# egg::ggarrange(hydroplot, heat1, heat2, \n#                scatter_basinnocis, sigmaplot, effectplot, nrow = 2, ncol = 3)\n# dev.off()\n# \n# \n# jpeg(\"C:/Users/jbaldock/OneDrive - DOI/Documents/USGS/EcoDrought/EcoDrought Working/Presentation figs/DroughtDuration_sitelevel_WestBrook_2020-2021_HydroAndHeat.jpg\", width = 5.5, height = 5.5, units = \"in\", res = 1000)\n# egg::ggarrange(hydroplot_dry + theme(axis.title.x = element_blank()), \n#                hydroplot_wet + theme(axis.title.x = element_blank(), axis.title.y = element_blank()), \n#                heat1, heat2, nrow = 2, ncol = 2)\n# dev.off()\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}